<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Vue | GUIDE]]></title>
  <link href="http://weilluo.github.io/blog/tags/vue/atom.xml" rel="self"/>
  <link href="http://weilluo.github.io/"/>
  <updated>2018-09-20T11:33:58+08:00</updated>
  <id>http://weilluo.github.io/</id>
  <author>
    <name><![CDATA[Wei Luo]]></name>
    <email><![CDATA[luowei---010101@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Angular Need Aot]]></title>
    <link href="http://weilluo.github.io/blog/2017/06/07/angular-aot/"/>
    <updated>2017-06-07T14:02:05+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/06/07/angular-aot</id>
    <content type="html"><![CDATA[<h2 id="compare-with-react-and-vue">Compare with React and Vue</h2>

<ul>
  <li>React JSX</li>
</ul>

<p><figure class='code'><figcaption class='code-header'><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>const element = (&lt;<span class="regexp"><span class="delimiter">/</span><span class="content">p&gt;</span></span>
<span class="line-numbers">2</span><span class="regexp"><span class="content">&lt;h1 classname=&quot;greeting&quot;&gt;</span></span>
<span class="line-numbers">3</span><span class="regexp"><span class="content">    Hello, world!</span></span>
<span class="line-numbers">4</span><span class="regexp"><span class="content">  &lt;</span><span class="delimiter">/</span></span>h1&gt;
<span class="line-numbers">5</span>&lt;p&gt;);
</pre></div>
</div>
 </figure></p>

<p><figure class='code'><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">const</span> <span class="nx">element</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span>
</span><span class='line'>  <span class="err">‘</span><span class="nx">h1</span><span class="err">’</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="err">‘</span><span class="nx">greeting</span><span class="err">’</span><span class="p">},</span>
</span><span class='line'>  <span class="err">‘</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!</span><span class="err">’</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>
<!--more-->
- Vue Template</p>

<p><figure class='code'><figcaption class='code-header'><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="tag">&lt;/p&gt;</span>
<span class="line-numbers"> 2</span><span class="tag">&lt;div&gt;</span>
<span class="line-numbers"> 3</span>  <span class="tag">&lt;h1&gt;</span>I'm a template!<span class="tag">&lt;/h1&gt;</span>
<span class="line-numbers"> 4</span>  <span class="tag">&lt;p</span> <span class="attribute-name">v-if</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">message</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
<span class="line-numbers"> 5</span>    
<span class="line-numbers"> 6</span>  <span class="tag">&lt;/p&gt;</span>
<span class="line-numbers"> 7</span>  <span class="tag">&lt;p</span> <span class="attribute-name">v-else</span>=<span class="string"><span class="delimiter">&quot;</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
<span class="line-numbers"> 8</span>    No message.
<span class="line-numbers"> 9</span>  <span class="tag">&lt;/p&gt;</span>
<span class="line-numbers"><strong>10</strong></span><span class="tag">&lt;/div&gt;</span>
<span class="line-numbers">11</span><span class="tag">&lt;p&gt;</span></pre></div>
</div>
 </figure></p>

<p><figure class='code'><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">anonymous</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">with</span><span class="p">(</span><span class="k">this</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">_h</span><span class="p">(</span>
</span><span class='line'>      <span class="err">‘</span><span class="nx">div</span><span class="err">’</span><span class="p">,</span>
</span><span class='line'>      <span class="p">[</span>
</span><span class='line'>        <span class="nx">_h</span><span class="p">(</span><span class="err">‘</span><span class="nx">h1</span><span class="err">’</span><span class="p">,[</span><span class="err">“</span><span class="nx">I</span><span class="err">’</span><span class="nx">m</span> <span class="nx">a</span> <span class="nx">template</span><span class="o">!</span><span class="err">”</span><span class="p">]),</span>
</span><span class='line'>        <span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="o">?</span>
</span><span class='line'>          <span class="nx">_h</span><span class="p">(</span><span class="err">‘</span><span class="nx">p</span><span class="err">’</span><span class="p">,[</span><span class="nx">_s</span><span class="p">(</span><span class="nx">message</span><span class="p">)])</span> <span class="o">:</span>
</span><span class='line'>          <span class="nx">_h</span><span class="p">(</span><span class="err">‘</span><span class="nx">p</span><span class="err">’</span><span class="p">,[</span><span class="err">“</span><span class="nx">No</span> <span class="nx">message</span><span class="p">.</span><span class="err">”</span><span class="p">])</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
  <li>Angular 2 Template</li>
</ul>

<p><figure class='code'><figcaption class='code-header'><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span><span class="tag">&lt;/p&gt;</span>
<span class="line-numbers">2</span><span class="tag">&lt;h1&gt;</span><span class="tag">&lt;/h1&gt;</span>
<span class="line-numbers">3</span><span class="tag">&lt;ul&gt;</span>
<span class="line-numbers">4</span>  <span class="entity">&amp;lt;</span>li *ngFor=&quot;let name of names&quot;<span class="entity">&amp;gt;</span>Hello <span class="entity">&amp;lt;</span>/li<span class="entity">&amp;gt;</span>
<span class="line-numbers">5</span><span class="tag">&lt;/ul&gt;</span>
<span class="line-numbers">6</span><span class="tag">&lt;p&gt;</span></pre></div>
</div>
 </figure></p>

<p><figure class='code'><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @fileoverview This file is generated by the Angular 2 template compiler.</span>
</span><span class='line'><span class="cm"> * Do not edit.</span>
</span><span class='line'><span class="cm"> * @suppress {suspiciousCode,uselessCode,missingProperties}</span>
</span><span class='line'><span class="cm"> &lt;em&gt;/</span>
</span><span class='line'><span class="cm"> /&lt;/em&gt; tslint:disable */</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import0</span> <span class="nx">from</span> <span class="err">‘</span><span class="p">.</span><span class="o">/</span><span class="nx">app</span><span class="p">.</span><span class="nx">component</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import1</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">view</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import2</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">render</span><span class="o">/</span><span class="nx">api</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import3</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">view_utils</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import4</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">metadata</span><span class="o">/</span><span class="nx">view</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import5</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">view_type</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import6</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">change_detection</span><span class="o">/</span><span class="nx">change_detection</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import7</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">component_factory</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import8</span> <span class="nx">from</span> <span class="err">‘</span><span class="p">.</span><span class="o">/</span><span class="nx">app</span><span class="p">.</span><span class="nx">component</span><span class="p">.</span><span class="nx">css</span><span class="p">.</span><span class="nx">shim</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import9</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">query_list</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import10</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">view_container</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import11</span> <span class="nx">from</span> <span class="err">‘</span><span class="p">..</span><span class="o">/</span><span class="p">..</span><span class="o">/</span><span class="nx">node_modules</span><span class="o">/</span><span class="err">@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">common</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">directives</span><span class="o">/</span><span class="nx">ng_for</span><span class="p">.</span><span class="nx">ngfactory</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import12</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">linker</span><span class="o">/</span><span class="nx">template_ref</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import13</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">core</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">change_detection</span><span class="o">/</span><span class="nx">differs</span><span class="o">/</span><span class="nx">iterable_differs</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import14</span> <span class="nx">from</span> <span class="err">‘@</span><span class="nx">angular</span><span class="o">/</span><span class="nx">common</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">directives</span><span class="o">/</span><span class="nx">ng_for</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'><span class="kr">export</span> <span class="kr">class</span> <span class="nx">Wrapper_AppComponent</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">/&lt;em&gt;private&lt;/em&gt;/ _eventHandler:Function;</span>
</span><span class='line'>  <span class="nx">context</span><span class="o">:</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">;</span>
</span><span class='line'>  <span class="err">/&lt;em&gt;private&lt;/em&gt;/ _changed:boolean;</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">context</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">ngOnDetach</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">componentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">ngOnDestroy</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">ngDoCheck</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="kr">boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">changed</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">changed</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">checkHost</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">componentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">handleEvent</span><span class="p">(</span><span class="nx">eventName</span><span class="o">:</span><span class="nx">string</span><span class="p">,</span><span class="nx">$event</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="kr">boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">result</span><span class="o">:</span><span class="kr">boolean</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">subscribe</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">_eventHandler</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span> <span class="o">=</span> <span class="nx">_eventHandler</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">renderType_AppComponent_Host</span><span class="o">:</span><span class="nx">import2</span><span class="p">.</span><span class="nx">RenderComponentType</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderComponentType</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">import4</span><span class="p">.</span><span class="nx">ViewEncapsulation</span><span class="p">.</span><span class="nx">None</span><span class="p">,([]</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">[]),{});</span>
</span><span class='line'><span class="kr">class</span> <span class="nx">View_AppComponent_Host0</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">compView_0</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_AppComponent_0_3</span><span class="o">:</span><span class="nx">Wrapper_AppComponent</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent_Host0</span><span class="p">,</span><span class="nx">renderType_AppComponent_Host</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">HOST</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">selectOrCreateRenderHostElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="s1">&#39;app-root&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,</span><span class="nx">rootSelector</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">View_AppComponent0</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewUtils</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Wrapper_AppComponent</span><span class="p">();</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">]),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef_</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">injectorGetInternal</span><span class="p">(</span><span class="nx">token</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">requestNodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">notFoundResult</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="nx">any</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="mi">0</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">notFoundResult</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">ngDoCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">detectChanges</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">destroyInternal</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">visitRootNodesInternal</span><span class="p">(</span><span class="nx">cb</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">ctx</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">export</span> <span class="kr">const</span> <span class="nx">AppComponentNgFactory</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentFactory</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentFactory</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span><span class="p">(</span><span class="s1">&#39;app-root&#39;</span><span class="p">,</span><span class="nx">View_AppComponent_Host0</span><span class="p">,</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">styles_AppComponent</span><span class="o">:</span><span class="nx">any</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="nx">import8</span><span class="p">.</span><span class="nx">styles</span><span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">renderType_AppComponent</span><span class="o">:</span><span class="nx">import2</span><span class="p">.</span><span class="nx">RenderComponentType</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderComponentType</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">import4</span><span class="p">.</span><span class="nx">ViewEncapsulation</span><span class="p">.</span><span class="nx">Emulated</span><span class="p">,</span><span class="nx">styles_AppComponent</span><span class="p">,{});</span>
</span><span class='line'><span class="kr">export</span> <span class="kr">class</span> <span class="nx">View_AppComponent0</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_viewQuery_someThing_0</span><span class="o">:</span><span class="nx">import9</span><span class="p">.</span><span class="nx">QueryList</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_1</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_2</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_el_3</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_4</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_anchor_5</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="cm">/*private*/</span> <span class="nx">_vc_5</span><span class="o">:</span><span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_TemplateRef_5_5</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_NgFor_5_6</span><span class="o">:</span><span class="nx">import11</span><span class="p">.</span><span class="nx">Wrapper_NgFor</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_6</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_7</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="cm">/*private*/</span> <span class="nx">_expr_12</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent0</span><span class="p">,</span><span class="nx">renderType_AppComponent</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">COMPONENT</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span> <span class="o">=</span> <span class="nx">import6</span><span class="p">.</span><span class="nx">UNINITIALIZED</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">parentRenderNode</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createViewRoot</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import9</span><span class="p">.</span><span class="nx">QueryList</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">();</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;h1&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_2</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;ul&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_4</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span><span class="s1">&#39;\n  &#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createTemplateAnchor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import12</span><span class="p">.</span><span class="nx">TemplateRef_</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import11</span><span class="p">.</span><span class="nx">Wrapper_NgFor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">vcRef</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parentView</span><span class="p">.</span><span class="nx">injectorGet</span><span class="p">(</span><span class="nx">import13</span><span class="p">.</span><span class="nx">IterableDiffers</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parentIndex</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ref</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_6</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_7</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span><span class="p">.</span><span class="nx">reset</span><span class="p">(([]</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">[]));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">someElement</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span><span class="p">.</span><span class="nx">first</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">((</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">),((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_2</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_4</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_6</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_7</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>    <span class="p">),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">injectorGetInternal</span><span class="p">(</span><span class="nx">token</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">requestNodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">notFoundResult</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="nx">any</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import12</span><span class="p">.</span><span class="nx">TemplateRef</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import14</span><span class="p">.</span><span class="nx">NgFor</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">notFoundResult</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">currVal_5_0_0</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">names</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">check_ngForOf</span><span class="p">(</span><span class="nx">currVal_5_0_0</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">ngDoCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">detectChangesInNestedViews</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">currVal_12</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">inlineInterpolate</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">import3</span><span class="p">.</span><span class="nx">checkBinding</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span><span class="p">,</span><span class="nx">currVal_12</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span><span class="nx">currVal_12</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span> <span class="o">=</span> <span class="nx">currVal_12</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">destroyInternal</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">destroyNestedViews</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">createEmbeddedViewInternal</span><span class="p">(</span><span class="nx">nodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">)</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">((</span><span class="nx">nodeIndex</span> <span class="o">==</span> <span class="mi">5</span><span class="p">))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">View_AppComponent1</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewUtils</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">class</span> <span class="nx">View_AppComponent1</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">_text_1</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="cm">/*private*/</span> <span class="nx">_expr_2</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">declaredViewContainer</span><span class="o">:</span><span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent1</span><span class="p">,</span><span class="nx">renderType_AppComponent</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">EMBEDDED</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">,</span><span class="nx">declaredViewContainer</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span> <span class="o">=</span> <span class="nx">import6</span><span class="p">.</span><span class="nx">UNINITIALIZED</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">),</span><span class="s1">&#39;li&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>    <span class="p">),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">currVal_2</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">inlineInterpolate</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;Hello &#39;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">$implicit</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">import3</span><span class="p">.</span><span class="nx">checkBinding</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span><span class="p">,</span><span class="nx">currVal_2</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span><span class="nx">currVal_2</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span> <span class="o">=</span> <span class="nx">currVal_2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">visitRootNodesInternal</span><span class="p">(</span><span class="nx">cb</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">ctx</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></any></any></any></any></any></any></any></any></any></any></import0.AppComponent></import0.AppComponent></import0.AppComponent></any></any></any></any></import0.AppComponent></any></any></any></any></any></any></any></p>

<p>That’s one reason that <code>Angular</code> use aot compiler.</p>

<h2 id="improve-itself">Improve itself</h2>

<p><em>The Angular Ahead-of-Time (AOT) compiler converts your Angular HTML and TypeScript code into efficient JavaScript code during the build phase before the browser downloads and runs that code.</em></p>

<ul>
  <li>
    <p>Just-in-Time 编译模式开发流程</p>

    <ul>
      <li>
        <p>使用 TypeScript 开发 Angular 应用</p>

        <ul>
          <li>
            <p>运行 tsc 编译 TypeScript 代码</p>
          </li>
          <li>
            <p>使用 Webpack 或 Gulp 等其他工具构建项目，如代码压缩、合并等</p>
          </li>
          <li>
            <p>部署应用</p>
          </li>
        </ul>
      </li>
      <li>
        <p>应用部署后，当用户通过浏览器访问我们应用的时候，她将经历以下步骤(非严格 CSP)：</p>

        <ul>
          <li>
            <p>下载应用相关的资源，如 JavaScript 文件、图片、样式资源</p>
          </li>
          <li>
            <p>Angular 启动</p>
          </li>
          <li>
            <p>Angular 进入 JiT 编译模式，开始编译我们应用中的指令或组件，生成相应的 JavaScript 代码</p>
          </li>
          <li>
            <p>应用完成渲染</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Ahead-Of-Time 编译模式开发流程</p>

    <ul>
      <li>
        <p>使用 TypeScript 开发 Angular 应用</p>

        <ul>
          <li>
            <p>运行 ngc 编译应用程序</p>
          </li>
          <li>
            <p>使用 Angular Compiler 编译模板，一般输出 TypeScript 代码</p>
          </li>
          <li>
            <p>运行 tsc 编译 TypeScript 代码</p>
          </li>
          <li>
            <p>使用 Webpack 或 Gulp 等其他工具构建项目，如代码压缩、合并等</p>
          </li>
          <li>
            <p>部署应用</p>
          </li>
        </ul>
      </li>
      <li>
        <p>应用部署后，相比于 JIT 编译模式，在 AOT 模式下用户访问我们的应用，只需经历以下步骤：</p>

        <ul>
          <li>
            <p>下载应用相关的资源，如 JavaScript 文件、图片、样式资源</p>
          </li>
          <li>
            <p>Angular 启动</p>
          </li>
          <li>
            <p>应用完成渲染</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="refrences">Refrences</h2>

<p><a href="https://segmentfault.com/a/1190000008739157">https://segmentfault.com/a/1190000008739157</a></p>
]]></content>
  </entry>
  
</feed>
