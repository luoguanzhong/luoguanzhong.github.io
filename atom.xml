<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GUIDE]]></title>
  <link href="http://weilluo.github.io/atom.xml" rel="self"/>
  <link href="http://weilluo.github.io/"/>
  <updated>2018-09-19T18:00:51+08:00</updated>
  <id>http://weilluo.github.io/</id>
  <author>
    <name><![CDATA[Wei Luo]]></name>
    <email><![CDATA[luowei---010101@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript 参数的优先级]]></title>
    <link href="http://weilluo.github.io/blog/2018/09/19/javascript-priority-of-params/"/>
    <updated>2018-09-19T15:08:37+08:00</updated>
    <id>http://weilluo.github.io/blog/2018/09/19/javascript-priority-of-params</id>
    <content type="html"><![CDATA[<h3 id="function-">1. 全局，function 内</h3>

<blockquote><p>function 内变量使用 var，重名时，局部变量的优先级更高</p></blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">var</span> a1 = <span class="integer">1</span>;
<span class="line-numbers"> 2</span>(<span class="keyword">function</span>() {
<span class="line-numbers"> 3</span>    a1 = <span class="integer">2</span>;
<span class="line-numbers"> 4</span>    console.log(a1);  <span class="comment">// 2</span>
<span class="line-numbers"> 5</span>})();
<span class="line-numbers"> 6</span>console.log(a1);  <span class="comment">// 2</span>
<span class="line-numbers"> 7</span>
<span class="line-numbers"> 8</span><span class="keyword">var</span> a2 = <span class="integer">1</span>, a3 = <span class="integer">1</span>;
<span class="line-numbers"> 9</span>(<span class="keyword">function</span>() {
<span class="line-numbers"><strong>10</strong></span>    <span class="keyword">var</span> a2 = <span class="integer">2</span>, a3;
<span class="line-numbers">11</span>    console.log(a2);  <span class="comment">// 2</span>
<span class="line-numbers">12</span>    console.log(a3);  <span class="comment">// undefined</span>
<span class="line-numbers">13</span>})();
<span class="line-numbers">14</span>console.log(a2);  <span class="comment">// 1</span>
<span class="line-numbers">15</span>console.log(a3);  <span class="comment">// 1</span>
</pre></div>
</div>
 </figure></notextile></div>
<!--more-->

<h3 id="function--1">2. 全局，function 的形参，局部变量</h3>

<blockquote><p>function 的局部变量优先级最高，然后是形参，最后是全局变量</p></blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">var</span> a1 = <span class="integer">1</span>;
<span class="line-numbers"> 2</span>(<span class="keyword">function</span>(a1) {
<span class="line-numbers"> 3</span>    console.log(a1);  <span class="comment">// 2</span>
<span class="line-numbers"> 4</span>})();
<span class="line-numbers"> 5</span>console.log(a1);  <span class="comment">// 1</span>
<span class="line-numbers"> 6</span>
<span class="line-numbers"> 7</span><span class="keyword">var</span> a2 = <span class="integer">1</span>;
<span class="line-numbers"> 8</span>(<span class="keyword">function</span>(a2) {
<span class="line-numbers"> 9</span>    a2 = <span class="integer">3</span>
<span class="line-numbers"><strong>10</strong></span>    console.log(a2);  <span class="comment">// 3</span>
<span class="line-numbers">11</span>})(<span class="integer">2</span>);
<span class="line-numbers">12</span>console.log(a2);  <span class="comment">// 1</span>
<span class="line-numbers">13</span>
<span class="line-numbers">14</span><span class="keyword">var</span> a3 = <span class="integer">1</span>, a4 = <span class="integer">1</span>;
<span class="line-numbers">15</span>(<span class="keyword">function</span>(a3, a4) {
<span class="line-numbers">16</span>    <span class="keyword">var</span> a3, a4 = <span class="integer">3</span>
<span class="line-numbers">17</span>    console.log(a3);  <span class="comment">// 22</span>
<span class="line-numbers">18</span>    console.log(a4);  <span class="comment">// 3</span>
<span class="line-numbers">19</span>})(<span class="integer">22</span>, <span class="integer">33</span>)
<span class="line-numbers"><strong>20</strong></span>console.log(a3);  <span class="comment">// 1</span>
<span class="line-numbers">21</span>console.log(a4);  <span class="comment">// 1</span>
</pre></div>
</div>
 </figure></notextile></div>

<h3 id="var--function-">3. var 和 function 的前置</h3>

<blockquote><p>使用 var 和 function 定义的变量和函数，运行时会前置，率先执行；<br />但是 var 定义并赋值一个变量时，只会把定义前置。</p></blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span>(<span class="keyword">function</span>() {
<span class="line-numbers"> 2</span>    console.log(a1);  <span class="comment">// undefined</span>
<span class="line-numbers"> 3</span>    console.log(a2);  <span class="comment">// ƒ a2() {}</span>
<span class="line-numbers"> 4</span>    <span class="keyword">var</span> a1;
<span class="line-numbers"> 5</span>    <span class="keyword">function</span> <span class="function">a2</span>() {}
<span class="line-numbers"> 6</span>})()
<span class="line-numbers"> 7</span>
<span class="line-numbers"> 8</span>(<span class="keyword">function</span>() {
<span class="line-numbers"> 9</span>    console.log(a1);  <span class="comment">// undefined</span>
<span class="line-numbers"><strong>10</strong></span>    <span class="keyword">var</span> a1 = <span class="integer">1</span>;
<span class="line-numbers">11</span>})()
</pre></div>
</div>
 </figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular Need Aot]]></title>
    <link href="http://weilluo.github.io/blog/2017/06/07/angular-aot/"/>
    <updated>2017-06-07T14:02:05+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/06/07/angular-aot</id>
    <content type="html"><![CDATA[<h2 id="compare-with-react-and-vue">Compare with React and Vue</h2>

<ul>
  <li>React JSX</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>const element = (
<span class="line-numbers">2</span>  <span class="tag">&lt;h1</span> <span class="attribute-name">className</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">greeting</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
<span class="line-numbers">3</span>    Hello, world!
<span class="line-numbers">4</span>  <span class="tag">&lt;/h1&gt;</span>
<span class="line-numbers">5</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kr">const</span> <span class="nx">element</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span>
</span><span class="line">  <span class="s1">&#39;h1&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="p">{</span><span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;greeting&#39;</span><span class="p">},</span>
</span><span class="line">  <span class="s1">&#39;Hello, world!&#39;</span>
</span><span class="line"><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->
<ul>
  <li>Vue Template</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="tag">&lt;div&gt;</span>
<span class="line-numbers"> 2</span>  <span class="tag">&lt;h1&gt;</span>I'm a template!<span class="tag">&lt;/h1&gt;</span>
<span class="line-numbers"> 3</span>  <span class="tag">&lt;p</span> <span class="attribute-name">v-if</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">message</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
<span class="line-numbers"> 4</span>    
<span class="line-numbers"> 5</span>  <span class="tag">&lt;/p&gt;</span>
<span class="line-numbers"> 6</span>  <span class="tag">&lt;p</span> <span class="attribute-name">v-else</span><span class="tag">&gt;</span>
<span class="line-numbers"> 7</span>    No message.
<span class="line-numbers"> 8</span>  <span class="tag">&lt;/p&gt;</span>
<span class="line-numbers"> 9</span><span class="tag">&lt;/div&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">function</span> <span class="nx">anonymous</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">with</span><span class="p">(</span><span class="k">this</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">_h</span><span class="p">(</span>
</span><span class="line">      <span class="s1">&#39;div&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="p">[</span>
</span><span class="line">        <span class="nx">_h</span><span class="p">(</span><span class="s1">&#39;h1&#39;</span><span class="p">,[</span><span class="s2">&quot;I&#39;m a template!&quot;</span><span class="p">]),</span>
</span><span class="line">        <span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="o">?</span>
</span><span class="line">          <span class="nx">_h</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">,[</span><span class="nx">_s</span><span class="p">(</span><span class="nx">message</span><span class="p">)])</span> <span class="o">:</span>
</span><span class="line">          <span class="nx">_h</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">,[</span><span class="s2">&quot;No message.&quot;</span><span class="p">])</span>
</span><span class="line">      <span class="p">]</span>
</span><span class="line">    <span class="p">)</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Angular 2 Template</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>Before </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span><span class="tag">&lt;h1&gt;</span><span class="tag">&lt;/h1&gt;</span>
<span class="line-numbers">2</span><span class="tag">&lt;ul&gt;</span>
<span class="line-numbers">3</span>  <span class="tag">&lt;li</span> <span class="error">*</span><span class="attribute-name">ngFor</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">let name of names</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>Hello <span class="tag">&lt;/li&gt;</span>
<span class="line-numbers">4</span><span class="tag">&lt;/ul&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>After </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
<span class="line-number">166</span>
<span class="line-number">167</span>
<span class="line-number">168</span>
<span class="line-number">169</span>
<span class="line-number">170</span>
<span class="line-number">171</span>
<span class="line-number">172</span>
<span class="line-number">173</span>
<span class="line-number">174</span>
<span class="line-number">175</span>
<span class="line-number">176</span>
<span class="line-number">177</span>
<span class="line-number">178</span>
<span class="line-number">179</span>
<span class="line-number">180</span>
<span class="line-number">181</span>
<span class="line-number">182</span>
<span class="line-number">183</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="cm">/**</span>
</span><span class="line"><span class="cm"> * @fileoverview This file is generated by the Angular 2 template compiler.</span>
</span><span class="line"><span class="cm"> * Do not edit.</span>
</span><span class="line"><span class="cm"> * @suppress {suspiciousCode,uselessCode,missingProperties}</span>
</span><span class="line"><span class="cm"> */</span>
</span><span class="line"> <span class="cm">/* tslint:disable */</span>
</span><span class="line">
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import0</span> <span class="nx">from</span> <span class="s1">&#39;./app.component&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import1</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/view&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import2</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/render/api&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import3</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/view_utils&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import4</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/metadata/view&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import5</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/view_type&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import6</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/change_detection/change_detection&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import7</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/component_factory&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import8</span> <span class="nx">from</span> <span class="s1">&#39;./app.component.css.shim&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import9</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/query_list&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import10</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/view_container&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import11</span> <span class="nx">from</span> <span class="s1">&#39;../../node_modules/@angular/common/src/directives/ng_for.ngfactory&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import12</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/linker/template_ref&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import13</span> <span class="nx">from</span> <span class="s1">&#39;@angular/core/src/change_detection/differs/iterable_differs&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">import14</span> <span class="nx">from</span> <span class="s1">&#39;@angular/common/src/directives/ng_for&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kr">export</span> <span class="kr">class</span> <span class="nx">Wrapper_AppComponent</span> <span class="p">{</span>
</span><span class="line">  <span class="cm">/*private*/</span> <span class="nx">_eventHandler</span><span class="o">:</span><span class="nb">Function</span><span class="p">;</span>
</span><span class="line">  <span class="nx">context</span><span class="o">:</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">;</span>
</span><span class="line">  <span class="cm">/*private*/</span> <span class="nx">_changed</span><span class="o">:</span><span class="kr">boolean</span><span class="p">;</span>
</span><span class="line">  <span class="nx">constructor</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">context</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">();</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">ngOnDetach</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">componentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">ngOnDestroy</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">ngDoCheck</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="kr">boolean</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">changed</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_changed</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">changed</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">checkHost</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">componentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">el</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">handleEvent</span><span class="p">(</span><span class="nx">eventName</span><span class="o">:</span><span class="nx">string</span><span class="p">,</span><span class="nx">$event</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="kr">boolean</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">result</span><span class="o">:</span><span class="kr">boolean</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">subscribe</span><span class="p">(</span><span class="nx">view</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">_eventHandler</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span> <span class="o">=</span> <span class="nx">_eventHandler</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">renderType_AppComponent_Host</span><span class="o">:</span><span class="nx">import2</span><span class="p">.</span><span class="nx">RenderComponentType</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderComponentType</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">import4</span><span class="p">.</span><span class="nx">ViewEncapsulation</span><span class="p">.</span><span class="nx">None</span><span class="p">,([]</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">[]),{});</span>
</span><span class="line"><span class="kr">class</span> <span class="nx">View_AppComponent_Host0</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">compView_0</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_AppComponent_0_3</span><span class="o">:</span><span class="nx">Wrapper_AppComponent</span><span class="p">;</span>
</span><span class="line">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent_Host0</span><span class="p">,</span><span class="nx">renderType_AppComponent_Host</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">HOST</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">selectOrCreateRenderHostElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="s1">&#39;app-root&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,</span><span class="nx">rootSelector</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">View_AppComponent0</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewUtils</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Wrapper_AppComponent</span><span class="p">();</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">]),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">return</span> <span class="k">new</span> <span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef_</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">injectorGetInternal</span><span class="p">(</span><span class="nx">token</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">requestNodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">notFoundResult</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="nx">any</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">0</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">notFoundResult</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_AppComponent_0_3</span><span class="p">.</span><span class="nx">ngDoCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">detectChanges</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">destroyInternal</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">compView_0</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">visitRootNodesInternal</span><span class="p">(</span><span class="nx">cb</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">ctx</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kr">export</span> <span class="kr">const</span> <span class="nx">AppComponentNgFactory</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentFactory</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentFactory</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span><span class="p">(</span><span class="s1">&#39;app-root&#39;</span><span class="p">,</span><span class="nx">View_AppComponent_Host0</span><span class="p">,</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="p">);</span>
</span><span class="line"><span class="kr">const</span> <span class="nx">styles_AppComponent</span><span class="o">:</span><span class="nx">any</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="nx">import8</span><span class="p">.</span><span class="nx">styles</span><span class="p">];</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">renderType_AppComponent</span><span class="o">:</span><span class="nx">import2</span><span class="p">.</span><span class="nx">RenderComponentType</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderComponentType</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">import4</span><span class="p">.</span><span class="nx">ViewEncapsulation</span><span class="p">.</span><span class="nx">Emulated</span><span class="p">,</span><span class="nx">styles_AppComponent</span><span class="p">,{});</span>
</span><span class="line"><span class="kr">export</span> <span class="kr">class</span> <span class="nx">View_AppComponent0</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">import0</span><span class="p">.</span><span class="nx">AppComponent</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">_viewQuery_someThing_0</span><span class="o">:</span><span class="nx">import9</span><span class="p">.</span><span class="nx">QueryList</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_1</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_2</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_el_3</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_4</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_anchor_5</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="cm">/*private*/</span> <span class="nx">_vc_5</span><span class="o">:</span><span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_TemplateRef_5_5</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_NgFor_5_6</span><span class="o">:</span><span class="nx">import11</span><span class="p">.</span><span class="nx">Wrapper_NgFor</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_6</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_7</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="cm">/*private*/</span> <span class="nx">_expr_12</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent0</span><span class="p">,</span><span class="nx">renderType_AppComponent</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">COMPONENT</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span> <span class="o">=</span> <span class="nx">import6</span><span class="p">.</span><span class="nx">UNINITIALIZED</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">const</span> <span class="nx">parentRenderNode</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createViewRoot</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import9</span><span class="p">.</span><span class="nx">QueryList</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">();</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;h1&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_2</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;ul&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_4</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span><span class="s1">&#39;\n  &#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createTemplateAnchor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import12</span><span class="p">.</span><span class="nx">TemplateRef_</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">import11</span><span class="p">.</span><span class="nx">Wrapper_NgFor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">vcRef</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parentView</span><span class="p">.</span><span class="nx">injectorGet</span><span class="p">(</span><span class="nx">import13</span><span class="p">.</span><span class="nx">IterableDiffers</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parentIndex</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ref</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_6</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_7</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="nx">parentRenderNode</span><span class="p">,</span><span class="s1">&#39;\n&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span><span class="p">.</span><span class="nx">reset</span><span class="p">(([]</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">[]));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">someElement</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_viewQuery_someThing_0</span><span class="p">.</span><span class="nx">first</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">((</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">),((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_2</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_el_3</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_4</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_6</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_7</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">    <span class="p">),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">injectorGetInternal</span><span class="p">(</span><span class="nx">token</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">requestNodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">notFoundResult</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="nx">any</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import12</span><span class="p">.</span><span class="nx">TemplateRef</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_TemplateRef_5_5</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(((</span><span class="nx">token</span> <span class="o">===</span> <span class="nx">import14</span><span class="p">.</span><span class="nx">NgFor</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">===</span> <span class="nx">requestNodeIndex</span><span class="p">)))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">notFoundResult</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">const</span> <span class="nx">currVal_5_0_0</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">names</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">check_ngForOf</span><span class="p">(</span><span class="nx">currVal_5_0_0</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_NgFor_5_6</span><span class="p">.</span><span class="nx">ngDoCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">detectChangesInNestedViews</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">);</span>
</span><span class="line">    <span class="kr">const</span> <span class="nx">currVal_12</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">inlineInterpolate</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">import3</span><span class="p">.</span><span class="nx">checkBinding</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span><span class="p">,</span><span class="nx">currVal_12</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span><span class="nx">currVal_12</span><span class="p">);</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_expr_12</span> <span class="o">=</span> <span class="nx">currVal_12</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">destroyInternal</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">.</span><span class="nx">destroyNestedViews</span><span class="p">();</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">createEmbeddedViewInternal</span><span class="p">(</span><span class="nx">nodeIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">)</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">((</span><span class="nx">nodeIndex</span> <span class="o">==</span> <span class="mi">5</span><span class="p">))</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">View_AppComponent1</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewUtils</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_anchor_5</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_vc_5</span><span class="p">);</span> <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kr">class</span> <span class="nx">View_AppComponent1</span> <span class="kr">extends</span> <span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">_el_0</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">_text_1</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="cm">/*private*/</span> <span class="nx">_expr_2</span><span class="o">:</span><span class="nx">any</span><span class="p">;</span>
</span><span class="line">  <span class="nx">constructor</span><span class="p">(</span><span class="nx">viewUtils</span><span class="o">:</span><span class="nx">import3</span><span class="p">.</span><span class="nx">ViewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="o">:</span><span class="nx">import1</span><span class="p">.</span><span class="nx">AppView</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="p">,</span><span class="nx">parentIndex</span><span class="o">:</span><span class="nx">number</span><span class="p">,</span><span class="nx">parentElement</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">declaredViewContainer</span><span class="o">:</span><span class="nx">import10</span><span class="p">.</span><span class="nx">ViewContainer</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">super</span><span class="p">(</span><span class="nx">View_AppComponent1</span><span class="p">,</span><span class="nx">renderType_AppComponent</span><span class="p">,</span><span class="nx">import5</span><span class="p">.</span><span class="nx">ViewType</span><span class="p">.</span><span class="nx">EMBEDDED</span><span class="p">,</span><span class="nx">viewUtils</span><span class="p">,</span><span class="nx">parentView</span><span class="p">,</span><span class="nx">parentIndex</span><span class="p">,</span><span class="nx">parentElement</span><span class="p">,</span><span class="nx">import6</span><span class="p">.</span><span class="nx">ChangeDetectorStatus</span><span class="p">.</span><span class="nx">CheckAlways</span><span class="p">,</span><span class="nx">declaredViewContainer</span><span class="p">);</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span> <span class="o">=</span> <span class="nx">import6</span><span class="p">.</span><span class="nx">UNINITIALIZED</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">createInternal</span><span class="p">(</span><span class="nx">rootSelector</span><span class="o">:</span><span class="nx">string</span><span class="p">)</span><span class="o">:</span><span class="nx">import7</span><span class="p">.</span><span class="nx">ComponentRef</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">createRenderElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">),</span><span class="s1">&#39;li&#39;</span><span class="p">,</span><span class="nx">import3</span><span class="p">.</span><span class="nx">EMPTY_INLINE_ARRAY</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">createText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,((</span><span class="o">&lt;</span><span class="nx">any</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">).</span><span class="nx">directRenderer</span><span class="o">?</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">)</span><span class="o">:</span> <span class="p">[</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">    <span class="p">),(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">));</span>
</span><span class="line">    <span class="k">return</span> <span class="p">(</span><span class="kc">null</span> <span class="nx">as</span> <span class="nx">any</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">detectChangesInternal</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="o">:</span><span class="kr">boolean</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="kr">const</span> <span class="nx">currVal_2</span><span class="o">:</span><span class="nx">any</span> <span class="o">=</span> <span class="nx">import3</span><span class="p">.</span><span class="nx">inlineInterpolate</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;Hello &#39;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">$implicit</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">import3</span><span class="p">.</span><span class="nx">checkBinding</span><span class="p">(</span><span class="nx">throwOnChange</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span><span class="p">,</span><span class="nx">currVal_2</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_text_1</span><span class="p">,</span><span class="nx">currVal_2</span><span class="p">);</span>
</span><span class="line">      <span class="k">this</span><span class="p">.</span><span class="nx">_expr_2</span> <span class="o">=</span> <span class="nx">currVal_2</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="nx">visitRootNodesInternal</span><span class="p">(</span><span class="nx">cb</span><span class="o">:</span><span class="nx">any</span><span class="p">,</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">any</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_el_0</span><span class="p">,</span><span class="nx">ctx</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>That’s one reason that <code>Angular</code> use aot compiler.</p>

<h2 id="improve-itself">Improve itself</h2>

<p><em>The Angular Ahead-of-Time (AOT) compiler converts your Angular HTML and TypeScript code into efficient JavaScript code during the build phase before the browser downloads and runs that code.</em></p>

<ul>
  <li>
    <p>Just-in-Time 编译模式开发流程</p>

    <ul>
      <li>
        <p>使用 TypeScript 开发 Angular 应用</p>

        <ul>
          <li>
            <p>运行 tsc 编译 TypeScript 代码</p>
          </li>
          <li>
            <p>使用 Webpack 或 Gulp 等其他工具构建项目，如代码压缩、合并等</p>
          </li>
          <li>
            <p>部署应用</p>
          </li>
        </ul>
      </li>
      <li>
        <p>应用部署后，当用户通过浏览器访问我们应用的时候，她将经历以下步骤(非严格 CSP)：</p>

        <ul>
          <li>
            <p>下载应用相关的资源，如 JavaScript 文件、图片、样式资源</p>
          </li>
          <li>
            <p>Angular 启动</p>
          </li>
          <li>
            <p>Angular 进入 JiT 编译模式，开始编译我们应用中的指令或组件，生成相应的 JavaScript 代码</p>
          </li>
          <li>
            <p>应用完成渲染</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Ahead-Of-Time 编译模式开发流程</p>

    <ul>
      <li>
        <p>使用 TypeScript 开发 Angular 应用</p>

        <ul>
          <li>
            <p>运行 ngc 编译应用程序</p>
          </li>
          <li>
            <p>使用 Angular Compiler 编译模板，一般输出 TypeScript 代码</p>
          </li>
          <li>
            <p>运行 tsc 编译 TypeScript 代码</p>
          </li>
          <li>
            <p>使用 Webpack 或 Gulp 等其他工具构建项目，如代码压缩、合并等</p>
          </li>
          <li>
            <p>部署应用</p>
          </li>
        </ul>
      </li>
      <li>
        <p>应用部署后，相比于 JIT 编译模式，在 AOT 模式下用户访问我们的应用，只需经历以下步骤：</p>

        <ul>
          <li>
            <p>下载应用相关的资源，如 JavaScript 文件、图片、样式资源</p>
          </li>
          <li>
            <p>Angular 启动</p>
          </li>
          <li>
            <p>应用完成渲染</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="refrences">Refrences</h2>

<p><a href="https://segmentfault.com/a/1190000008739157">https://segmentfault.com/a/1190000008739157</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs Best Practices]]></title>
    <link href="http://weilluo.github.io/blog/2017/06/02/nodejs-best-practices/"/>
    <updated>2017-06-02T10:28:04+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/06/02/nodejs-best-practices</id>
    <content type="html"><![CDATA[<h2 id="embrace-async">Embrace async</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Before </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">let</span> <span class="nx">af</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">promise</span><span class="p">;</span>
</span><span class="line"><span class="kd">let</span> <span class="nx">bf</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">promise</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="kd">let</span> <span class="nx">cf</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">af</span><span class="p">().</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">bf</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">      <span class="kd">let</span> <span class="nx">t</span> <span class="o">=</span> <span class="nx">result</span><span class="p">;</span>
</span><span class="line">      <span class="k">return</span> <span class="p">...;</span>
</span><span class="line">    <span class="p">})</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">let</span> <span class="nx">df</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">cf</span><span class="p">().</span><span class="nx">then</span><span class="p">().</span><span class="k">catch</span><span class="p">();</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>After </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>...
<span class="line-numbers">2</span>let cf = async () =&gt; {
<span class="line-numbers">3</span>  let r1 = await af();
<span class="line-numbers">4</span>  let r2 = await bf();
<span class="line-numbers">5</span>  <span class="keyword">return</span> ...;
<span class="line-numbers">6</span>}
<span class="line-numbers">7</span>...
</pre></div>
</div>
 </figure></notextile></div>

<blockquote>
  <p>Now we need <code>babel</code> to compile this syntax</p>
</blockquote>

<h2 id="npm">NPM</h2>

<ul>
  <li>
    <p>start project use <code>npm init</code></p>
  </li>
  <li>
    <p>use <code>.npmrc</code></p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>npm config set save=true
npm config set save-exact=true
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>add scripts to <code>package.json</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre><span class="key"><span class="delimiter">&quot;</span><span class="content">scripts</span><span class="delimiter">&quot;</span></span>: {
  <span class="key"><span class="delimiter">&quot;</span><span class="content">debug</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">npm run es6 -- --nolazy --debug-brk=5858 src/server.js</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">es6</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">node_modules/.bin/babel-node</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">es6:watch</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">node_modules/.bin/babel-watch</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">eslint</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">node_modules/.bin/eslint</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">start</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">npm run es6:watch -- src/server.js</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">start:prod</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">npm run es6 -- src/server.js</span><span class="delimiter">&quot;</span></span>,
  <span class="key"><span class="delimiter">&quot;</span><span class="content">test</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">npm run eslint -- </span><span class="char">\&quot;</span><span class="content">src/**/*.js</span><span class="char">\&quot;</span><span class="content"> &amp;&amp; make tests</span><span class="delimiter">&quot;</span></span>
}
</pre></div>
</div>
 </figure></notextile></div>

<h2 id="style-guide">Style guide</h2>

<p><code>ESlint</code>, <code>JSLint</code> and so on.</p>

<h2 id="handle-errors-and-logging-important-messages">Handle errors and logging important messages</h2>

<p>Some <code>syntax</code> like:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre><span class="comment">// if use express</span>
let errorCatch = (err, req, res, next) =&gt; {
  logger.error(err.message, <span class="string"><span class="delimiter">&quot;</span><span class="char">\n</span><span class="delimiter">&quot;</span></span> + err.stack);
  <span class="comment">// some logic ...</span>
  res.status(err.code || <span class="integer">500</span>);
  res.json({ <span class="key">error</span>: err.message });
}
</pre></div>
</div>
 </figure></notextile></div>

<h2 id="process-management">Process management</h2>

<ul>
  <li>
    <p>automatically restart app</p>
  </li>
  <li>
    <p>cluster app</p>
  </li>
</ul>

<h2 id="use-content-security-policy-in-web-application">Use <code>Content-Security-Policy</code> in web application</h2>

<p>reduce XSS (Cross-Site scripting) risks on modern browsers, <a href="https://content-security-policy.com/">https://content-security-policy.com/</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mock a Method When Test Express Api]]></title>
    <link href="http://weilluo.github.io/blog/2017/05/06/mock-a-method-when-test-express-api/"/>
    <updated>2017-05-06T15:08:16+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/05/06/mock-a-method-when-test-express-api</id>
    <content type="html"><![CDATA[<p>I think many guys are using <code>express</code> as they backend service framework, there is a most important thing <code>Test</code>. We should write test for the apis that usually contains a lot of business logics.</p>

<p>Today I want to show my experiences on writing test for express apis.
<!--more-->
Dependencies</p>

<pre><code>"babel-register": "6.23.0",
"chai": "3.5.0",
"chai-as-promised": "6.0.0",
"mocha": "3.3.0",
"sinon": "2.2.0",
"supertest": "3.0.0"
</code></pre>

<p>Makefile</p>

<pre><code>TESTS = src/test/**/*.spec.js
REPORTER = spec

NODE_ENV = test

tests:
  @./node_modules/.bin/mocha \
    --compilers js:babel-register \
    --require src/test/test-helper.js \
    --timeout 10000 \
    --colors \
    --reporter $(REPORTER) \
    $(TESTS)

.PHONY: tests
</code></pre>

<p>test-helper.js</p>

<pre><code>import chai from 'chai';
import chaiAsPromised from 'chai-as-promised';

chai.use(chaiAsPromised);
global.expect = chai.expect;
</code></pre>

<p>I use <code>supertest</code> to send a reqeust to api, here I supply one example, because it confuses me for a long time.</p>

<h2 id="example">Example</h2>

<p>Update roles api, it will check <code>current user</code> permission firstly</p>

<blockquote>
  <p>case 1, user have RoleUpdate permission
case 2, user don’t have RoleUpdate permission</p>
</blockquote>

<pre><code>router.route('/:id/roles').put(hasPermission('RoleUpdate'), (req, res, next) =&gt; {
  ...
});

export let hasPermission = (name) =&gt; {
  return (req, res, next) =&gt; {
    readPermission(req.currentUser)
      .then(results =&gt; {
        let permissions = results.map(result =&gt; result.name);
        if (permissions.indexOf(name) === -1) {
          return next(new PermissionError(`Sorry, You don't have ${name} permission`));
        }
        next();
      })
      .catch(err =&gt; next(err));
  }
};

let readPermission = (username) =&gt; {
  return Permisison.findByUser(username);
};
</code></pre>

<p>In these two case, the directly thought is mock the <code>hasPermission</code> or export <code>readPermission</code> then mock him, but unfortunately, all of these solutions fail. Because it runs before the app starts.</p>

<p>If we mock <code>Permisison.findByUser</code>, it can works well.</p>

<pre><code>let sandbox = sinon.sandbox.create();

case 1
sandbox.stub(Permisison, 'findByUser').returns(RSVP.resolve([{ name: 'RoleUpdate' }]));
...
case 2
sandbox.stub(Permisison, 'findByUser').returns(RSVP.resolve([]));
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Difference Between Config and Run in Angular]]></title>
    <link href="http://weilluo.github.io/blog/2017/04/26/difference-between-config-and-run-in-angular/"/>
    <updated>2017-04-26T20:30:25+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/04/26/difference-between-config-and-run-in-angular</id>
    <content type="html"><![CDATA[<p>Configuration blocks and run blocks get executed at different points in the application bootstrap, and have different injection locals at their disposal. Here’s a summary of what you can find in the <a href="http://docs.angularjs.org/guide/module">AngularJS documentation</a>.
<!--more-->
Configuration blocks (registered with <code>module.config()</code>) get executed during provider registration, and can only be injected providers and constants (see <code>module.provider()</code> and <code>module.constant()</code>). This is typically where you would configure application-wide stuff, such as the $routeProvider. Stuff that needs to be configured before the services are created.</p>

<p>Run blocks (registered with <code>module.run()</code>) get executed after the injector has all the providers. Now, all instances and constants can be injected. This is typically where you would configure services, <code>$rootScope</code>, events and so on.</p>

<p>You can have multiple of either, and they are executed in the order they were registered to the module. Some people prefer to register a configuration block before every group of controllers to register the routes to these controller, for example.</p>

<blockquote>
  <p>Reference:</p>
</blockquote>

<p><a href="http://stackoverflow.com/questions/18123565/config-run-appctrl-where-to-put-routes">http://stackoverflow.com/questions/18123565/config-run-appctrl-where-to-put-routes</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[S3 Policy on EC2 Having Changes Between ECS and EB]]></title>
    <link href="http://weilluo.github.io/blog/2017/04/15/s3-policy-on-ec2-having-changes-between-ecs-and-eb/"/>
    <updated>2017-04-15T11:47:12+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/04/15/s3-policy-on-ec2-having-changes-between-ecs-and-eb</id>
    <content type="html"><![CDATA[<p>We can see the title, and below is the different policy:
<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>EC2 Instance from ECS </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span>{
<span class="line-numbers"> 2</span>    <span class="key"><span class="delimiter">&quot;</span><span class="content">Version</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">2012-10-17</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"> 3</span>    <span class="key"><span class="delimiter">&quot;</span><span class="content">Statement</span><span class="delimiter">&quot;</span></span>: [
<span class="line-numbers"> 4</span>        {
<span class="line-numbers"> 5</span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Effect</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Allow</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"> 6</span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Action</span><span class="delimiter">&quot;</span></span>: [
<span class="line-numbers"> 7</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:Get*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"> 8</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:List*</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 9</span>            ],
<span class="line-numbers"><strong>10</strong></span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Resource</span><span class="delimiter">&quot;</span></span>: [
<span class="line-numbers">11</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">arn:aws:s3:::elasticbeanstalk-*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers">12</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">arn:aws:s3:::elasticbeanstalk-*/*/system_files/*</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers">13</span>            ]
<span class="line-numbers">14</span>        },
<span class="line-numbers">15</span>        {
<span class="line-numbers">16</span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Effect</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Allow</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers">17</span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Action</span><span class="delimiter">&quot;</span></span>: [
<span class="line-numbers">18</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:Put*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers">19</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:Get*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"><strong>20</strong></span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:List*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers">21</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">s3:Delete*</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers">22</span>            ],
<span class="line-numbers">23</span>            <span class="key"><span class="delimiter">&quot;</span><span class="content">Resource</span><span class="delimiter">&quot;</span></span>: [
<span class="line-numbers">24</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">arn:aws:s3:::elasticbeanstalk-*</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers">25</span>                <span class="string"><span class="delimiter">&quot;</span><span class="content">arn:aws:s3:::elasticbeanstalk-*/*/app_data/*</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers">26</span>            ]
<span class="line-numbers">27</span>        }
<span class="line-numbers">28</span>    ]
<span class="line-numbers">29</span>}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>EC2 Instance from EB </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;Version&quot;</span><span class="p">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="s2">&quot;s3:GetObject&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::elasticbeanstalk-*/*/system_files/*&quot;</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">                <span class="s2">&quot;s3:PutObject&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s2">&quot;s3:GetObject&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s2">&quot;s3:DeleteObject&quot;</span>
</span><span class="line">            <span class="p">],</span>
</span><span class="line">            <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::elasticbeanstalk-*/*/app_data/*&quot;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>So if I use EB’s policy on ECS, it must report <code>access denied</code>, I try to find out some documents about this on aws, but failed. But I will continue verifying it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capistrano Deploy to Multiple Servers]]></title>
    <link href="http://weilluo.github.io/blog/2017/04/15/capistrano-deploy-to-multiple-servers/"/>
    <updated>2017-04-15T11:20:25+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/04/15/capistrano-deploy-to-multiple-servers</id>
    <content type="html"><![CDATA[<p>The key <code>snippet</code> is below:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">role</span> <span class="ss">:app</span><span class="p">,</span> <span class="sx">%w{xx.xx.xx.xx xx.xx.xx.xx}</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s1">&#39;ubuntu&#39;</span><span class="p">,</span> <span class="ss">primary</span><span class="p">:</span> <span class="kp">true</span>
</span><span class="line">
</span><span class="line"><span class="n">set</span> <span class="ss">:pty</span><span class="p">,</span> <span class="kp">true</span>
</span><span class="line">
</span><span class="line"><span class="n">set</span> <span class="ss">:ssh_options</span><span class="p">,</span> <span class="p">{</span>
</span><span class="line">  <span class="ss">forward_agent</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class="line">  <span class="ss">auth_methods</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;publickey&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">  <span class="ss">keys</span><span class="p">:</span> <span class="sx">%w(~/.ssh/id_rsa_jenkins_deploy)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The introduce of <a href="http://capistranorb.com/documentation/faq/why-does-something-work-in-my-ssh-session-but-not-in-capistrano/">pty</a>, and some expression of <a href="https://developer.github.com/guides/using-ssh-agent-forwarding/">forward_agent</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Different Between Include and Extend in Ruby]]></title>
    <link href="http://weilluo.github.io/blog/2016/11/17/different-between-include-and-extend-in-ruby/"/>
    <updated>2016-11-17T14:35:32+08:00</updated>
    <id>http://weilluo.github.io/blog/2016/11/17/different-between-include-and-extend-in-ruby</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>Example </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">module</span> <span class="class">AAA</span>
<span class="line-numbers"> 2</span>  <span class="keyword">def</span> <span class="function">aaa</span>
<span class="line-numbers"> 3</span>    puts <span class="string"><span class="delimiter">&quot;</span><span class="content">aaa</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 4</span>  <span class="keyword">end</span>
<span class="line-numbers"> 5</span>
<span class="line-numbers"> 6</span>  <span class="keyword">def</span> <span class="predefined-constant">self</span>.<span class="function">bbb</span>
<span class="line-numbers"> 7</span>    puts <span class="string"><span class="delimiter">&quot;</span><span class="content">bbb</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 8</span>  <span class="keyword">end</span>
<span class="line-numbers"> 9</span><span class="keyword">end</span>
<span class="line-numbers"><strong>10</strong></span>
<span class="line-numbers">11</span><span class="keyword">class</span> <span class="class">C1</span>
<span class="line-numbers">12</span>  include <span class="constant">AAA</span>
<span class="line-numbers">13</span><span class="keyword">end</span>
<span class="line-numbers">14</span>
<span class="line-numbers">15</span><span class="comment"># C1.bbb  # undefined method `bbb' for C1:Class</span>
<span class="line-numbers">16</span><span class="comment"># C1.aaa  # undefined method `aaa' for C1:Class</span>
<span class="line-numbers">17</span><span class="constant">C1</span>.new.aaa  <span class="comment"># aaa</span>
<span class="line-numbers">18</span><span class="comment"># C1.new.bbb  # undefined method `bbb' for #&lt;C1:0x007ff1f414af08&gt;</span>
<span class="line-numbers">19</span>
<span class="line-numbers"><strong>20</strong></span><span class="keyword">class</span> <span class="class">C2</span>
<span class="line-numbers">21</span>  extend <span class="constant">AAA</span>
<span class="line-numbers">22</span><span class="keyword">end</span>
<span class="line-numbers">23</span>
<span class="line-numbers">24</span><span class="comment"># C2.bbb  # undefined method `bbb' for C2:Class</span>
<span class="line-numbers">25</span><span class="constant">C2</span>.aaa  <span class="comment"># aaa</span>
<span class="line-numbers">26</span><span class="comment"># C2.new.aaa  # undefined method `aaa' for #&lt;C2:0x007f86ea943298&gt;</span>
<span class="line-numbers">27</span><span class="comment"># C2.new.bbb  # undefined method `bbb' for #&lt;C2:0x007fc463117270&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add a User to Admin Group on Mac.]]></title>
    <link href="http://weilluo.github.io/blog/2016/02/05/add-a-user-to-admin-group-on-mac/"/>
    <updated>2016-02-05T11:32:33+08:00</updated>
    <id>http://weilluo.github.io/blog/2016/02/05/add-a-user-to-admin-group-on-mac</id>
    <content type="html"><![CDATA[<h2 id="issus">Issus</h2>

<p>Many software will apply the <code>admin</code> permission to possibly use some system tools, so I try to add my account to admin group.
<!--more-->
## Solution</p>

<ul>
  <li>
    <p>press <code>command</code> + <code>s</code> while boot, then mac will go to <code>single-user-mode</code> as <code>root</code>. This is a terminal interface that allows you to login and interact with your computer via text input only.</p>
  </li>
  <li>
    <p>mount the root device as <code>read-write</code></p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">fsck -fy
</span><span class="line">mount -uw /
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>edit the sudo user list, and move <code>wluo</code> into it.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">chmod <span class="m">755</span> etc/sudoers
</span><span class="line">vim etc/sudoers  <span class="c"># put &quot;wluo ALL=(ALL) ALL&quot; under &quot;root ALL=(ALL) ALL&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p><code>reboot</code> mac, then open <code>terminal</code>.</p>
  </li>
  <li>
    <p>put <code>wluo</code> into <code>admin</code> group</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo su
</span><span class="line">dseditgroup -o edit -a wluo -t user admin
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins Email Notificaiton]]></title>
    <link href="http://weilluo.github.io/blog/2015/11/04/jenkins-email-notificaiton/"/>
    <updated>2015-11-04T12:23:38+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/11/04/jenkins-email-notificaiton</id>
    <content type="html"><![CDATA[<p>Email notification with <code>Email-ext</code> plug-in:</p>

<ul>
  <li>pre-send scripts</li>
</ul>

<p>We use <code>Jenkins</code> as our ci server, and we run integration test on firefox on <code>xvfb</code>. Sometime, we receive the email about test failure, caused by<code> xvfb</code> starting failed.</p>

<p>So we want to ignore sending email by this case. As we know, the<code> email-ext</code> plugin can help us. we should write <code>pre-send scripts</code>, but we don’t know how to write them.</p>

<p>How do I write a script to cancel sending email when failure output message contains a specified error message?
<!--more-->
<em>Solution</em>:</p>

<p>My <code>groovy</code> script in email-ext plugin pre-send-script is:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">try {
</span><span class="line">    def logFilePath = build.getLogFile().getPath();
</span><span class="line">    String logContent = new File(logFilePath).text;
</span><span class="line">    if (logContent.find(/Xvfb failed to start/)) cancel=true;
</span><span class="line">} catch (all) {
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>That resolve my problem.</p>

<ul>
  <li>CHANGES Token, follow <a href="http://stackoverflow.com/questions/7773010/how-to-include-git-changelog-in-jenkins-emails">this</a></li>
</ul>

<p>Config email notification in specified job, change the content like below:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;pre&gt;$PROJECT_DEFAULT_CONTENT&lt;/pre&gt;
</span><span class="line">&lt;pre&gt;
</span><span class="line">Changes:
</span><span class="line">${CHANGES, showPaths=true, format="%a: %r %p \n-- %m", pathFormat="\n\t- %p"}
</span><span class="line">&lt;/pre&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then I will receive this format email:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">test-email - Build # 9 - Successful:
</span><span class="line">
</span><span class="line">Check console output at http://jenkins.cb-apac.com/job/test-email/9/ to view the results.
</span><span class="line">Changes:
</span><span class="line">Wei Luo: f87b103da4817cbcf1a4ce17ed5bf9687146bfdf
</span><span class="line">  - app/jobs2/checkparams_check.rb
</span><span class="line">  - config/resque_schedule.yml
</span><span class="line">  - app/jobs2/watch_dog.rb
</span><span class="line">-- copy jobs to resque.</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="this-is-arguments-description">This is arguments description</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class=""><span class="line">${CHANGES}
</span><span class="line">Displays the changes since the last build.
</span><span class="line">
</span><span class="line">showDependencies
</span><span class="line">    If true, changes to projects this build depends on are shown. Defaults to false
</span><span class="line">showPaths
</span><span class="line">    If true, the paths, modifued by a commit are shown. Defaults to false
</span><span class="line">format
</span><span class="line">    For each commit listed, a string containing %X, where %x is one of:
</span><span class="line">
</span><span class="line">    %a
</span><span class="line">        author
</span><span class="line">    %d
</span><span class="line">        date
</span><span class="line">    %m
</span><span class="line">        message
</span><span class="line">    %p
</span><span class="line">        path
</span><span class="line">    %r
</span><span class="line">        revision
</span><span class="line">
</span><span class="line">    Not all revision systems support %d and %r. If specified showPaths argument is ignored. Defaults to "[%a] %m\\n"
</span><span class="line">pathFormat
</span><span class="line">    A string containing %p to indicate how to print paths. Defaults to "\\t%p\\n"</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="to-be-continue">TO BE CONTINUE</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Ssh Key Add in Difference Github Account]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/29/multiple-ssh-key-add-in-difference-github-account/"/>
    <updated>2015-10-29T12:59:20+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/29/multiple-ssh-key-add-in-difference-github-account</id>
    <content type="html"><![CDATA[<h2 id="question">Question</h2>

<p>First computer: I have added <code>id_ras.pub</code> to <code>CBluowei</code> account.</p>

<p>Seconed computer: I have added another <code>id_ras.pub</code> to <code>luoguanzhong</code> account.</p>

<p>I want push <code>luoguanzhong</code>’s project on first computer.
<!--more-->
## Resolve</p>

<ul>
  <li>config the <code>~/.ssh/config</code>.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">Host lgz.github.com
</span><span class="line">  HostName github.com
</span><span class="line">  User git
</span><span class="line">  IdentityFile ~/.ssh/id_rsa_office
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>replace git remote origin from <code>git@github.com/luoguanzhong/xxx.git</code> to <code>git@lgz.github.com/luoguanzhong/xxx.git</code></p>
  </li>
  <li>
    <p>then I can push <code>xxx</code> project on First computer.</p>
  </li>
  <li>
    <p>use <code>ssh -T git@lgz.github.com</code> to verify.</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ES6 Introduction]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/19/es6introduction/"/>
    <updated>2015-10-19T23:12:47+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/19/es6introduction</id>
    <content type="html"><![CDATA[<h2 id="what-is-es6">What is ES6?</h2>

<p>It’s <code>ECMAScript 6</code>, the standard of the next generation of javascript. Now <code>ECMAScript 6</code> is renamed to ECMAScript 2015, that mean it was released in 2015.</p>

<p><code>ECMAScript</code> is a specification, <code>Javascript</code> is an implementation.</p>

<p><a href="http://www.ecma-international.org/">ECMA</a> is an international, they standardize the scripting language.</p>

<p>There are <a href="https://en.wikipedia.org/wiki/ECMAScript#Versions">released versions</a> of <code>ECMAScript</code>.</p>

<p>Other little languages compile into javascript, such as <a href="http://coffeescript.org/">CoffeeScript</a>, <a href="http://www.typescriptlang.org/">TypeScript</a>.
<!--more-->
## New features</p>

<ul>
  <li>Constants</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>const PI = <span class="float">3.14</span>
<span class="line-numbers">2</span>PI &gt; <span class="float">3.0</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">//  only in ES5 through the help of object properties</span>
</span><span class="line"><span class="c1">//  and only in global context and not in a block scope</span>
</span><span class="line"><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">global</span> <span class="o">===</span> <span class="s2">&quot;object&quot;</span> <span class="o">?</span> <span class="nx">global</span> <span class="o">:</span> <span class="nb">window</span><span class="p">,</span> <span class="s2">&quot;PI&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">value</span><span class="o">:</span>        <span class="mf">3.141593</span><span class="p">,</span>
</span><span class="line">    <span class="nx">enumerable</span><span class="o">:</span>   <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nx">writable</span><span class="o">:</span>     <span class="kc">false</span><span class="p">,</span>
</span><span class="line">    <span class="nx">configurable</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="p">})</span>
</span><span class="line"><span class="nx">PI</span> <span class="o">&gt;</span> <span class="mf">3.0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Arrow Functions</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>odds  = evens.map(v =&gt; v + <span class="integer">1</span>)
<span class="line-numbers">2</span>pairs = evens.map(v =&gt; ({ <span class="key">even</span>: v, <span class="key">odd</span>: v + <span class="integer">1</span> }))
<span class="line-numbers">3</span>nums  = evens.map((v, i) =&gt; v + i)
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">odds</span>  <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">v</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="p">});</span>
</span><span class="line"><span class="nx">pairs</span> <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">{</span> <span class="nx">even</span><span class="o">:</span> <span class="nx">v</span><span class="p">,</span> <span class="nx">odd</span><span class="o">:</span> <span class="nx">v</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">};</span> <span class="p">});</span>
</span><span class="line"><span class="nx">nums</span>  <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">v</span> <span class="o">+</span> <span class="nx">i</span><span class="p">;</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Default Parameter Values</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span><span class="keyword">function</span> <span class="function">f</span> (x, y = <span class="integer">7</span>, z = <span class="integer">42</span>) {
<span class="line-numbers">2</span>    <span class="keyword">return</span> x + y + z
<span class="line-numbers">3</span>}
<span class="line-numbers">4</span>f(<span class="integer">1</span>) === <span class="integer">50</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">function</span> <span class="nx">f</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">z</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">y</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">)</span>
</span><span class="line">        <span class="nx">y</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">z</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">)</span>
</span><span class="line">        <span class="nx">z</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span> <span class="o">+</span> <span class="nx">z</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">f</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">===</span> <span class="mi">50</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Enhanced Object Properties</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="comment">// Property Shorthand</span>
<span class="line-numbers"> 2</span>obj = { x, y }
<span class="line-numbers"> 3</span>
<span class="line-numbers"> 4</span><span class="comment">// Computed Property Names</span>
<span class="line-numbers"> 5</span>obj = {
<span class="line-numbers"> 6</span>    <span class="key">foo</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">bar</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"> 7</span>    [ <span class="string"><span class="delimiter">&quot;</span><span class="content">prop_</span><span class="delimiter">&quot;</span></span> + foo() ]: <span class="integer">42</span>
<span class="line-numbers"> 8</span>}
<span class="line-numbers"> 9</span>
<span class="line-numbers"><strong>10</strong></span><span class="comment">// Method Properties</span>
<span class="line-numbers">11</span>obj = {
<span class="line-numbers">12</span>    foo (a, b) {
<span class="line-numbers">13</span>        <span class="error">…</span>
<span class="line-numbers">14</span>    },
<span class="line-numbers">15</span>    bar (x, y) {
<span class="line-numbers">16</span>        <span class="error">…</span>
<span class="line-numbers">17</span>    },
<span class="line-numbers">18</span>    *quux (x, y) {
<span class="line-numbers">19</span>        <span class="error">…</span>
<span class="line-numbers"><strong>20</strong></span>    }
<span class="line-numbers">21</span>}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// Property Shorthand</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">x</span><span class="o">:</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span> <span class="nx">y</span> <span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Computed Property Names</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">foo</span><span class="o">:</span> <span class="s2">&quot;bar&quot;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">obj</span><span class="p">[</span> <span class="s2">&quot;prop_&quot;</span> <span class="o">+</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">]</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Method Properties</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">foo</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="err">…</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="nx">bar</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="err">…</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="c1">//  quux: no equivalent in ES5</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Modules</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="comment">//  lib/math.js</span>
<span class="line-numbers"> 2</span><span class="reserved">export</span> <span class="keyword">function</span> <span class="function">sum</span> (x, y) { <span class="keyword">return</span> x + y }
<span class="line-numbers"> 3</span><span class="reserved">export</span> <span class="keyword">var</span> pi = <span class="float">3.141593</span>
<span class="line-numbers"> 4</span>
<span class="line-numbers"> 5</span><span class="comment">//  someApp.js</span>
<span class="line-numbers"> 6</span><span class="reserved">import</span> * as math from <span class="string"><span class="delimiter">&quot;</span><span class="content">lib/math</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 7</span>console.log(<span class="string"><span class="delimiter">&quot;</span><span class="content">2π = </span><span class="delimiter">&quot;</span></span> + math.sum(math.pi, math.pi))
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span><span class="comment">//  otherApp.js</span>
<span class="line-numbers"><strong>10</strong></span><span class="reserved">import</span> { sum, pi } from <span class="string"><span class="delimiter">&quot;</span><span class="content">lib/math</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers">11</span>console.log(<span class="string"><span class="delimiter">&quot;</span><span class="content">2π = </span><span class="delimiter">&quot;</span></span> + sum(pi, pi))
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">//  lib/math.js</span>
</span><span class="line"><span class="nx">LibMath</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class="line"><span class="nx">LibMath</span><span class="p">.</span><span class="nx">sum</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span> <span class="p">};</span>
</span><span class="line"><span class="nx">LibMath</span><span class="p">.</span><span class="nx">pi</span> <span class="o">=</span> <span class="mf">3.141593</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">//  someApp.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">math</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">;</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;2π = &quot;</span> <span class="o">+</span> <span class="nx">math</span><span class="p">.</span><span class="nx">sum</span><span class="p">(</span><span class="nx">math</span><span class="p">.</span><span class="nx">pi</span><span class="p">,</span> <span class="nx">math</span><span class="p">.</span><span class="nx">pi</span><span class="p">));</span>
</span><span class="line">
</span><span class="line"><span class="c1">//  otherApp.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">.</span><span class="nx">sum</span><span class="p">,</span> <span class="nx">pi</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">.</span><span class="nx">pi</span><span class="p">;</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;2π = &quot;</span> <span class="o">+</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">pi</span><span class="p">,</span> <span class="nx">pi</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Classes</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="reserved">class</span> Shape {
<span class="line-numbers"> 2</span>    constructor (id, x, y) {
<span class="line-numbers"> 3</span>        <span class="local-variable">this</span>.id = id
<span class="line-numbers"> 4</span>        <span class="local-variable">this</span>.move(x, y)
<span class="line-numbers"> 5</span>    }
<span class="line-numbers"> 6</span>    move (x, y) {
<span class="line-numbers"> 7</span>        <span class="local-variable">this</span>.x = x
<span class="line-numbers"> 8</span>        <span class="local-variable">this</span>.y = y
<span class="line-numbers"> 9</span>    }
<span class="line-numbers"><strong>10</strong></span>}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">Shape</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">id</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">move</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">);</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">Shape</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">move</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Generator Functions</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">function</span>* idMaker(){
<span class="line-numbers"> 2</span>  <span class="keyword">var</span> index = <span class="integer">0</span>;
<span class="line-numbers"> 3</span>  <span class="keyword">while</span>(index &lt; <span class="integer">3</span>)
<span class="line-numbers"> 4</span>    yield index++;
<span class="line-numbers"> 5</span>}
<span class="line-numbers"> 6</span>
<span class="line-numbers"> 7</span><span class="keyword">var</span> gen = idMaker();
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span>console.log(gen.next().value); <span class="comment">// 0</span>
<span class="line-numbers"><strong>10</strong></span>console.log(gen.next().value); <span class="comment">// 1</span>
<span class="line-numbers">11</span>console.log(gen.next().value); <span class="comment">// 2</span>
<span class="line-numbers">12</span>console.log(gen.next().value); <span class="comment">// undefined</span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Spread operator</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">function</span> <span class="function">add</span>(a, b) {
<span class="line-numbers"> 2</span>  <span class="keyword">return</span> a + b;
<span class="line-numbers"> 3</span>}
<span class="line-numbers"> 4</span>
<span class="line-numbers"> 5</span>let nums = [<span class="integer">5</span>, <span class="integer">4</span>];
<span class="line-numbers"> 6</span>
<span class="line-numbers"> 7</span>console.log(add(...nums));
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span>let foo = <span class="string"><span class="delimiter">&quot;</span><span class="content">foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"><strong>10</strong></span>let chars = [ ...str ] <span class="comment">// [ &quot;f&quot;, &quot;o&quot;, &quot;o&quot; ]</span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Proxying</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span>let target = {
<span class="line-numbers"> 2</span>    <span class="key">foo</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Welcome, foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 3</span>}
<span class="line-numbers"> 4</span>let proxy = <span class="keyword">new</span> Proxy(target, {
<span class="line-numbers"> 5</span>    get (receiver, name) {
<span class="line-numbers"> 6</span>        <span class="keyword">return</span> name <span class="keyword">in</span> receiver ? receiver[name] : <span class="error">`</span>Hello, <span class="predefined">$</span>{name}<span class="error">`</span>
<span class="line-numbers"> 7</span>    }
<span class="line-numbers"> 8</span>})
<span class="line-numbers"> 9</span>proxy.foo   === <span class="string"><span class="delimiter">&quot;</span><span class="content">Welcome, foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"><strong>10</strong></span>proxy.world === <span class="string"><span class="delimiter">&quot;</span><span class="content">Hello, world</span><span class="delimiter">&quot;</span></span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Map and Set Data-Structure</li>
</ul>

<p>To see more, we could visit, <a href="http://es6-features.org/#Constants">ECMAScript 6 — New Features: Overview &amp; Comparison</a></p>

<h2 id="compile">Compile</h2>

<p>Compile ES6 to ES5.</p>

<p>Why need <code>compile</code>? because the <a href="http://kangax.github.io/compat-table/es6/">browser support of ES6</a> isn’t enough.</p>

<ul>
  <li><a href="https://babeljs.io/">Babel</a></li>
</ul>

<p><code>Babel</code> is a new name of <code>ES6to5</code>. It can integrate with many js / node frameworks.</p>

<h2 id="conclusion">Conclusion</h2>

<p>OK, let’s start ES6 now!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DISQUS Example]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/14/disqus-example/"/>
    <updated>2015-10-14T18:05:18+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/14/disqus-example</id>
    <content type="html"><![CDATA[<p>This is the codes:
<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE HTML&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">  <span class="nt">&lt;title&gt;</span>Disqus AJAX Test Site<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line"><span class="nt">&lt;div&gt;</span>
</span><span class="line">    <span class="nt">&lt;pre&gt;</span>
</span><span class="line">        cklasnclkasnclanclasnclkasnclascasc
</span><span class="line">        ascnknascklnaskcnaskc
</span><span class="line">        nalcknlakscnlask
</span><span class="line">    <span class="nt">&lt;/pre&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;disqus_thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid1&#39;, &#39;http://example.com/unique-path-to-article1/&#39;, &#39;Article Title 2&#39;, &#39;en&#39;);&quot;</span><span class="nt">&gt;</span>Load article 1 (English)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid2&#39;, &#39;http://example.com/unique-path-to-article2/&#39;, &#39;Article Title 2&#39;, &#39;fr&#39;);&quot;</span><span class="nt">&gt;</span>Load article 2 (Franch)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid3&#39;, &#39;http://example.com/unique-path-to-article3/&#39;, &#39;Article Title 3&#39;, &#39;zh&#39;);&quot;</span><span class="nt">&gt;</span>Load article 3 (Chinese)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid4&#39;, &#39;http://example.com/unique-path-to-article4/&#39;, &#39;Article Title 4&#39;, &#39;ru&#39;);&quot;</span><span class="nt">&gt;</span>Load article 4 (Russian)<span class="nt">&lt;/button&gt;</span>
</span><span class="line">
</span><span class="line"><span class="c">&lt;!-- &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt; --&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="cm">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_shortname</span> <span class="o">=</span> <span class="s1">&#39;example&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_identifier</span> <span class="o">=</span> <span class="s1">&#39;newid1&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_url</span> <span class="o">=</span> <span class="s1">&#39;http://example.com/unique-path-to-article-1/&#39;</span><span class="p">;</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">disqus_config</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">language</span> <span class="o">=</span> <span class="s2">&quot;en&quot;</span><span class="p">;</span>
</span><span class="line">  <span class="p">};</span>
</span><span class="line">    <span class="cm">/* * * DON&#39;T EDIT BELOW THIS LINE * * */</span>
</span><span class="line">    <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span> <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span> <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class="line">        <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://&#39;</span> <span class="o">+</span> <span class="nx">disqus_shortname</span> <span class="o">+</span> <span class="s1">&#39;.disqus.com/embed.js&#39;</span><span class="p">;</span>
</span><span class="line">        <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class="line">    <span class="p">})();</span>
</span><span class="line">    <span class="cm">/* * * Disqus Reset Function * * */</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">reset</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">newIdentifier</span><span class="p">,</span> <span class="nx">newUrl</span><span class="p">,</span> <span class="nx">newTitle</span><span class="p">,</span> <span class="nx">newLanguage</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">DISQUS</span><span class="p">.</span><span class="nx">reset</span><span class="p">({</span>
</span><span class="line">            <span class="nx">reload</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">            <span class="nx">config</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">identifier</span> <span class="o">=</span> <span class="nx">newIdentifier</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="nx">newUrl</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">newTitle</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">language</span> <span class="o">=</span> <span class="nx">newLanguage</span><span class="p">;</span>
</span><span class="line">            <span class="p">}</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;noscript&gt;</span>Please enable JavaScript to view the <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com/?ref_noscript&quot;</span><span class="nt">&gt;</span>comments powered by Disqus.<span class="nt">&lt;/a&gt;&lt;/noscript&gt;</span>
</span><span class="line"><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com&quot;</span> <span class="na">class=</span><span class="s">&quot;dsq-brlink&quot;</span><span class="nt">&gt;</span>blog comments powered by <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;logo-disqus&quot;</span><span class="nt">&gt;</span>Disqus<span class="nt">&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveRecord, Class_attribute]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/14/activerecord-class_attribute/"/>
    <updated>2015-10-14T11:51:44+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/14/activerecord-class_attribute</id>
    <content type="html"><![CDATA[<p>how to use class_attribuet:
<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Base</span>
</span><span class="line">  <span class="n">class_attribute</span> <span class="ss">:setting</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Subclass</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="n">base</span> <span class="o">=</span> <span class="no">Base</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="nb">puts</span> <span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="nb">puts</span> <span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS Beanstalk Ruby Passenger, Solutions of Rjb Installing and 504 Gateway-Timeout]]></title>
    <link href="http://weilluo.github.io/blog/2015/07/22/aws-beanstalk-ruby-passenger/"/>
    <updated>2015-07-22T19:03:56+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/07/22/aws-beanstalk-ruby-passenger</id>
    <content type="html"><![CDATA[<p>Environment: AWS Beanstalk, 64bit Amazon Linux 2015.03 v1.4.1 running Ruby 2.1 (Passenger Standalone)</p>

<p>Project: Rails</p>

<p>The server had installed <code>java-1.7.0-openjdk</code>, and <code>JAVA_HOME = /usr/lib/jvm/jre</code></p>

<p>There are to issuses:</p>

<ul>
  <li>gem install rjb, can’t find the floder /usr/lib/jvm/jre/include
<!--more--></li>
</ul>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># we should install java-1.7.0-openjdk-devel
</span><span class="line">packages:
</span><span class="line">  yum:
</span><span class="line">      git: []
</span><span class="line">        java-1.7.0-openjdk-devel: []
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>504 Gateway-Timeout, when the request invoke some method depend <code>RJB</code></li>
</ul>

<p>I had found a paragraph: <a href="http://xsen.iteye.com/blog/440675">http://xsen.iteye.com/blog/440675</a></p>

<p>The <code>Reason</code> is <code>rjb</code>, he said, and the solution is, in，passenger_ruby配置项下添加一行设置:</p>

<ul>
  <li>if using nginx, add this code in passenger_ruby config, <code>rails_spawn_method conservative;</code></li>
  <li>if using apache, add this code in PassengerRuby config, <code>RailsSpawnMethod conservative</code></li>
</ul>

<p>and I found s syntax code used for AWS Beanstalk, that is <a href="https://gist.github.com/luoguanzhong/bb684c59dfbe9ae02022">https://gist.github.com/luoguanzhong/bb684c59dfbe9ae02022</a>.</p>

<p><strong>Summary</strong>：You should login the server and see where the package install, and which it install. This could be help you quickly find the right solution.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Sublime Custom Config]]></title>
    <link href="http://weilluo.github.io/blog/2015/06/29/my-sublime-custom-config/"/>
    <updated>2015-06-29T21:13:46+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/06/29/my-sublime-custom-config</id>
    <content type="html"><![CDATA[<ul>
  <li>User Preference:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class=""><span class="line">{
</span><span class="line">	"color_scheme": "Packages/Oceanic Next Color Scheme/Oceanic Next.tmTheme",
</span><span class="line">	"folder_exclude_patterns":
</span><span class="line">	[
</span><span class="line">		".svn",
</span><span class="line">		".git",
</span><span class="line">		".hg",
</span><span class="line">		"CVS",
</span><span class="line">		"tmp/*.tmp"
</span><span class="line">	],
</span><span class="line">	"font_size": 12,
</span><span class="line">	"ignored_packages":
</span><span class="line">	[
</span><span class="line">		"Vintage"
</span><span class="line">	],
</span><span class="line">	"save_on_focus_lost": false,
</span><span class="line">	"tab_size": 4,
</span><span class="line">	"theme": "Seti.sublime-theme",
</span><span class="line">	"translate_tabs_to_spaces": true,
</span><span class="line">	"trim_trailing_white_space_on_save": true
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>User Key Bindings</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[
</span><span class="line">  { "keys": ["command+shift+f"], "command": "reindent"}
</span><span class="line">]</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clear Watchman Watch-list]]></title>
    <link href="http://weilluo.github.io/blog/2015/05/18/clear-watchman-watch-list/"/>
    <updated>2015-05-18T18:22:09+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/05/18/clear-watchman-watch-list</id>
    <content type="html"><![CDATA[<p>Watchman: <a href="https://github.com/facebook/watchman">https://github.com/facebook/watchman</a></p>

<ul>
  <li>create file <code>clear_watchman_list.rb</code> in <code>HOME</code> folder.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">result</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span> <span class="sx">%x{watchman watch-list}</span>
</span><span class="line"><span class="n">result</span><span class="o">[</span><span class="s2">&quot;roots&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">dir</span><span class="o">|</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;watchman watch-del </span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>define <code>cwl</code> command in <code>.profile</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># clear watchman list</span>
</span><span class="line"><span class="nb">alias </span><span class="nv">cwl</span><span class="o">=</span><span class="s2">&quot;ruby $HOME/clear_watchman_list.rb&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>use <code>cwl</code> if we want to empty the watchman list.</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swap Space for Aws Ubuntu Server]]></title>
    <link href="http://weilluo.github.io/blog/2015/05/07/swap-space-for-aws-ubuntu-server/"/>
    <updated>2015-05-07T13:20:52+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/05/07/swap-space-for-aws-ubuntu-server</id>
    <content type="html"><![CDATA[<p>It’s very <code>important</code>!!!</p>

<p>Swap will auto release (or free) the unused memory.</p>

<p>We setup an <code>jenkins</code> ci server, run functional test on firefox use xvfb. After some hours, the memory is almost full.</p>

<p>So we add swap to our ci server.</p>

<p>Example: <a href="https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04">https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04</a></p>

<p>Reference:</p>

<p><a href="http://stackoverflow.com/questions/29764181/jenkins-email-ext-plugin-pre-send-scripts">http://stackoverflow.com/questions/29764181/jenkins-email-ext-plugin-pre-send-scripts</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Can Cause a Cookie Not to Be Set on the Client?]]></title>
    <link href="http://weilluo.github.io/blog/2015/04/17/what-can-cause-a-cookie-not-to-be-set-on-the-client/"/>
    <updated>2015-04-17T10:11:06+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/04/17/what-can-cause-a-cookie-not-to-be-set-on-the-client</id>
    <content type="html"><![CDATA[<h2 id="issues">Issues</h2>

<p>I use ember at cliend, and start on localhost:4200; sinatra at server, start on localhost:9292.</p>

<p>Then I use <code>response.set_cookie()</code> to store user info, but I cannot see cookie setted just now on <code>chrome console -&gt; resource -&gt; cookies -&gt; localhost</code>.</p>

<p>cliend code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="line">  <span class="nx">url</span><span class="o">:</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//localhost:9292/user</span>
</span><span class="line"><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>cliend code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">response</span><span class="o">.</span><span class="n">set_cookie</span><span class="p">(</span><span class="s1">&#39;Cookie-Name&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:value</span> <span class="o">=&gt;</span> <span class="n">value</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:expires</span> <span class="o">=&gt;</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="o">+</span> <span class="mi">3600</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">14</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:domain</span> <span class="o">=&gt;</span> <span class="vi">@domain</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:httponly</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="solution">Solution</h2>

<p>Option in ajax:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">xhrFields</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">withCredentials</span><span class="o">:</span> <span class="kc">true</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Response header in sinatra, <code>Access-Control-Allow-Credentials: true</code>, <code>Access-Control-Allow-Origin: http://localhost:4200</code></p>

<h2 id="important">Important</h2>

<p>Don’t set localhost as a domain for your cookies because you need to set it to “” or FALSE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone4 无 SHSH 从 iOS7.1.2 降级到 iOS6.1.3]]></title>
    <link href="http://weilluo.github.io/blog/2015/02/09/iphone4-wu-shsh-cong-ios7-dot-1-2-jiang-ji-dao-ios6-dot-1-3/"/>
    <updated>2015-02-09T12:37:50+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/02/09/iphone4-wu-shsh-cong-ios7-dot-1-2-jiang-ji-dao-ios6-dot-1-3</id>
    <content type="html"><![CDATA[<h2 id="iphone4gsm-">经过艰辛的历程，终于将 iPhone4(GSM版) 成功降级；</h2>

<ul>
  <li>使用工具</li>
</ul>

<p>爱思，红雪，平台windows7</p>

<ul>
  <li>悲剧的报错</li>
</ul>

<p>之前使用的是xp系统，结果出现写入 AppleLogo 失败，set Picture 0 failure…的报错，一直以为是手机硬件问题，纠结了半个多月。之后自己的 win7 电脑修好后，重新试了一下，竟然成功了。</p>

<ul>
  <li>
    <p>刷机过程 <a href="http://bbs.i4.cn/thread-18856-1-1.html">http://bbs.i4.cn/thread-18856-1-1.html</a></p>

    <ul>
      <li>
        <p>使用红雪或爱思助手等工具查看手机的ECID</p>
      </li>
      <li>
        <p>找到对应 iOS 版本的 shsh 文件，打开文件，将 ECID 的改为自己手机的</p>
      </li>
      <li>
        <p>将修改后的 shsh 文件上传到爱思服务器</p>
      </li>
      <li>
        <p>使用爱思助手刷机，刷机前选中保持基带不升级</p>
      </li>
      <li>
        <p>使用红雪进行越狱，越狱时一定选择 Deactive 选项，否则开机后手机无服务</p>
      </li>
      <li>
        <p>每次关机后都必须使用红雪进行引导开机</p>
      </li>
      <li>
        <p>如果手机锁屏后睡死，请在 Cydia 中添加威锋源(apt.weiphone.com)，再下载 insomnia pro 插件，保证锁屏系统不真正睡眠，但这样非常耗电。喜欢 iOS6 style 的朋友可以使用第二篇文章中的6.2.1的固件刷机，成功后不会出现睡死状况。</p>
      </li>
    </ul>
  </li>
  <li>
    <p>PS</p>
  </li>
</ul>

<p>这篇博客讲了直接使用无睡死的固件来刷机，<a href="http://bbs.app111.com/thread-640908-1-1.html">http://bbs.app111.com/thread-640908-1-1.html</a> ，下载好文章中给出的固件后，还是按照以上 <code>3.4</code> - <code>3.6</code> 的步骤来操作。</p>
]]></content>
  </entry>
  
</feed>
