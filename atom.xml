<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GUIDE]]></title>
  <link href="http://weilluo.github.io/atom.xml" rel="self"/>
  <link href="http://weilluo.github.io/"/>
  <updated>2017-04-15T11:18:23+08:00</updated>
  <id>http://weilluo.github.io/</id>
  <author>
    <name><![CDATA[Wei Luo]]></name>
    <email><![CDATA[luowei---010101@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Waiting for Dynamically Loaded Script]]></title>
    <link href="http://weilluo.github.io/blog/2017/04/15/waiting-for-dynamically-loaded-script/"/>
    <updated>2017-04-15T09:37:54+08:00</updated>
    <id>http://weilluo.github.io/blog/2017/04/15/waiting-for-dynamically-loaded-script</id>
    <content type="html"><![CDATA[<p>Historically, <code>&lt;script&gt;</code> tags are full blocking, hence the second <code>&lt;script&gt;</code> tag can’t get encountered befored the former has finished parsing/excuting. Only problem might be that <code>modern</code> browsers tend to load scripts asynchronously and deferred. So to make sure order is correct, use it like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Snippet </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;p&gt;</span>Loading jQuery<span class="nt">&lt;/p&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&#39;text/javascript&#39;</span> <span class="na">async=</span><span class="s">false</span> <span class="na">defer=</span><span class="s">false</span> <span class="na">src=</span><span class="s">&#39;scripts/jquery/core/jquery-1.4.4.js&#39;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;p&gt;</span>Using jQuery<span class="nt">&lt;/p&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&#39;text/javascript&#39;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="line">        <span class="p">...</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h3 id="plain-script-elements">Plain script elements</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//other-domain.com/1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;2.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Spec says:</strong> Download together, execute in order after any pending CSS, block rendering until complete.</p>

<p><strong>Browsers say:</strong> Yes sir!</p>

<h3 id="defer">Defer</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//other-domain.com/1.js&quot;</span> <span class="na">defer</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;2.js&quot;</span> <span class="na">defer</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Spec says:</strong> Download together, execute in order just before DOMContentLoaded. Ignore <code>defer</code> on scripts without <code>src</code>.</p>

<p><strong>IE &lt; 10 says</strong>: I might execute 2.js halfway through the execution of 1.js. Isn’t that fun??</p>

<p><strong>The <a href="http://caniuse.com/#search=defer">browsers in red</a> say</strong>: I have no idea what this <code>defer</code> thing is, I’m going to load the scripts as if it weren’t there.</p>

<p><strong>Other browsers say:</strong> Ok, but I might not ignore <code>defer</code> on scripts without <code>src</code>.</p>

<h3 id="async">Async</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//other-domain.com/1.js&quot;</span> <span class="na">async</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;2.js&quot;</span> <span class="na">async</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Spec says:</strong> Download together, execute in whatever order they download in.</p>

<p><strong>The <a href="http://caniuse.com/#search=defer">browsers in red</a> say</strong>: What’s <code>async</code>? I’m going to load the scripts as if it weren’t there..</p>

<p><strong>Other browsers say:</strong> Yeah, ok.</p>

<h3 id="async-false">Async false</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">[</span>
</span><span class="line">  <span class="s1">&#39;1.js&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;2.js&#39;</span>
</span><span class="line"><span class="p">].</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">src</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">script</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="nx">script</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">src</span><span class="p">;</span>
</span><span class="line">  <span class="nx">script</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class="line">  <span class="nb">document</span><span class="p">.</span><span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Spec says:</strong> Download together, execute in order as soon as all download.</p>

<p><strong>Firefox &lt; 3.6, Opera says:</strong> I have no idea what this <code>async</code> thing is, but it just so happens I execute scripts added via JS in the order they’re added.</p>

<p><strong>Safari 5.0 says:</strong>  I understand <code>async</code>, but don’t understand setting it to <code>false</code> with JS. I’ll execute your scripts as soon as they land, in whatever order.</p>

<p><strong>IE &lt; 10 says:</strong> No idea about <code>async</code>, but there is a workaround using <code>onreadystatechange</code>.</p>

<p><strong>The <a href="http://caniuse.com/#search=defer">browsers in red</a> say</strong>: I don’t understand this <code>async</code> thing, I’ll execute your scripts as soon as they land, in whatever order.</p>

<p><strong>Everything else says:</strong> I’m your friend, we’re going to do this by the book.</p>

<hr />

<p>Reference:</p>

<p><a href="http://stackoverflow.com/questions/7308908/waiting-for-dynamically-loaded-script">http://stackoverflow.com/questions/7308908/waiting-for-dynamically-loaded-script</a></p>

<p><a href="https://www.html5rocks.com/en/tutorials/speed/script-loading/">https://www.html5rocks.com/en/tutorials/speed/script-loading</a></p>

<p>Modern browsers only execute scripts asyncrounously or deferred if async and defer has been specified. <code>async=false</code> and <code>defer=false</code> is completely unnecessary in HTML. However, scripts that are dynamically created have async set to <code>true</code> by default, which is why you need the <code>async = false</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Different Between Include and Extend in Ruby]]></title>
    <link href="http://weilluo.github.io/blog/2016/11/17/different-between-include-and-extend-in-ruby/"/>
    <updated>2016-11-17T14:35:32+08:00</updated>
    <id>http://weilluo.github.io/blog/2016/11/17/different-between-include-and-extend-in-ruby</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>Example </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">module</span> <span class="class">AAA</span>
<span class="line-numbers"> 2</span>  <span class="keyword">def</span> <span class="function">aaa</span>
<span class="line-numbers"> 3</span>    puts <span class="string"><span class="delimiter">&quot;</span><span class="content">aaa</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 4</span>  <span class="keyword">end</span>
<span class="line-numbers"> 5</span>
<span class="line-numbers"> 6</span>  <span class="keyword">def</span> <span class="predefined-constant">self</span>.<span class="function">bbb</span>
<span class="line-numbers"> 7</span>    puts <span class="string"><span class="delimiter">&quot;</span><span class="content">bbb</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 8</span>  <span class="keyword">end</span>
<span class="line-numbers"> 9</span><span class="keyword">end</span>
<span class="line-numbers"><strong>10</strong></span>
<span class="line-numbers">11</span><span class="keyword">class</span> <span class="class">C1</span>
<span class="line-numbers">12</span>  include <span class="constant">AAA</span>
<span class="line-numbers">13</span><span class="keyword">end</span>
<span class="line-numbers">14</span>
<span class="line-numbers">15</span><span class="comment"># C1.bbb  # undefined method `bbb' for C1:Class</span>
<span class="line-numbers">16</span><span class="comment"># C1.aaa  # undefined method `aaa' for C1:Class</span>
<span class="line-numbers">17</span><span class="constant">C1</span>.new.aaa  <span class="comment"># aaa</span>
<span class="line-numbers">18</span><span class="comment"># C1.new.bbb  # undefined method `bbb' for #&lt;C1:0x007ff1f414af08&gt;</span>
<span class="line-numbers">19</span>
<span class="line-numbers"><strong>20</strong></span><span class="keyword">class</span> <span class="class">C2</span>
<span class="line-numbers">21</span>  extend <span class="constant">AAA</span>
<span class="line-numbers">22</span><span class="keyword">end</span>
<span class="line-numbers">23</span>
<span class="line-numbers">24</span><span class="comment"># C2.bbb  # undefined method `bbb' for C2:Class</span>
<span class="line-numbers">25</span><span class="constant">C2</span>.aaa  <span class="comment"># aaa</span>
<span class="line-numbers">26</span><span class="comment"># C2.new.aaa  # undefined method `aaa' for #&lt;C2:0x007f86ea943298&gt;</span>
<span class="line-numbers">27</span><span class="comment"># C2.new.bbb  # undefined method `bbb' for #&lt;C2:0x007fc463117270&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add a User to Admin Group on Mac.]]></title>
    <link href="http://weilluo.github.io/blog/2016/02/05/add-a-user-to-admin-group-on-mac/"/>
    <updated>2016-02-05T11:32:33+08:00</updated>
    <id>http://weilluo.github.io/blog/2016/02/05/add-a-user-to-admin-group-on-mac</id>
    <content type="html"><![CDATA[<h2 id="issus">Issus</h2>

<p>Many software will apply the <code>admin</code> permission to possibly use some system tools, so I try to add my account to admin group.</p>

<h2 id="solution">Solution</h2>

<ul>
  <li>
    <p>press <code>command</code> + <code>s</code> while boot, then mac will go to <code>single-user-mode</code> as <code>root</code>. This is a terminal interface that allows you to login and interact with your computer via text input only.</p>
  </li>
  <li>
    <p>mount the root device as <code>read-write</code></p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">fsck -fy
</span><span class="line">mount -uw /
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>edit the sudo user list, and move <code>wluo</code> into it.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">chmod <span class="m">755</span> etc/sudoers
</span><span class="line">vim etc/sudoers  <span class="c"># put &quot;wluo ALL=(ALL) ALL&quot; under &quot;root ALL=(ALL) ALL&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p><code>reboot</code> mac, then open <code>terminal</code>.</p>
  </li>
  <li>
    <p>put <code>wluo</code> into <code>admin</code> group</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo su
</span><span class="line">dseditgroup -o edit -a wluo -t user admin
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="references">References</h2>

<p><a href="http://www.techradar.com/how-to/computing/apple/how-to-use-os-x-boot-options-to-troubleshoot-your-mac-1305645">http://www.techradar.com/how-to/computing/apple/how-to-use-os-x-boot-options-to-troubleshoot-your-mac-1305645</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins Email Notificaiton]]></title>
    <link href="http://weilluo.github.io/blog/2015/11/04/jenkins-email-notificaiton/"/>
    <updated>2015-11-04T12:23:38+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/11/04/jenkins-email-notificaiton</id>
    <content type="html"><![CDATA[<p>Email notification with <code>Email-ext</code> plug-in:</p>

<ul>
  <li>pre-send scripts</li>
</ul>

<p>We use <code>Jenkins</code> as our ci server, and we run integration test on firefox on <code>xvfb</code>. Sometime, we receive the email about test failure, caused by<code> xvfb</code> starting failed.</p>

<p>So we want to ignore sending email by this case. As we know, the<code> email-ext</code> plugin can help us. we should write <code>pre-send scripts</code>, but we don’t know how to write them.</p>

<p>How do I write a script to cancel sending email when failure output message contains a specified error message?</p>

<p><em>Solution</em>:</p>

<p>My <code>groovy</code> script in email-ext plugin pre-send-script is:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">try {
</span><span class="line">    def logFilePath = build.getLogFile().getPath();
</span><span class="line">    String logContent = new File(logFilePath).text;
</span><span class="line">    if (logContent.find(/Xvfb failed to start/)) cancel=true;
</span><span class="line">} catch (all) {
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>That resolve my problem.</p>

<ul>
  <li>CHANGES Token, follow <a href="http://stackoverflow.com/questions/7773010/how-to-include-git-changelog-in-jenkins-emails">this</a></li>
</ul>

<p>Config email notification in specified job, change the content like below:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;pre&gt;$PROJECT_DEFAULT_CONTENT&lt;/pre&gt;
</span><span class="line">&lt;pre&gt;
</span><span class="line">Changes:
</span><span class="line">${CHANGES, showPaths=true, format="%a: %r %p \n-- %m", pathFormat="\n\t- %p"}
</span><span class="line">&lt;/pre&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then I will receive this format email:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">test-email - Build # 9 - Successful:
</span><span class="line">
</span><span class="line">Check console output at http://jenkins.cb-apac.com/job/test-email/9/ to view the results.
</span><span class="line">Changes:
</span><span class="line">Wei Luo: f87b103da4817cbcf1a4ce17ed5bf9687146bfdf
</span><span class="line">  - app/jobs2/checkparams_check.rb
</span><span class="line">  - config/resque_schedule.yml
</span><span class="line">  - app/jobs2/watch_dog.rb
</span><span class="line">-- copy jobs to resque.</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="this-is-arguments-description">This is arguments description</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class=""><span class="line">${CHANGES}
</span><span class="line">Displays the changes since the last build.
</span><span class="line">
</span><span class="line">showDependencies
</span><span class="line">    If true, changes to projects this build depends on are shown. Defaults to false
</span><span class="line">showPaths
</span><span class="line">    If true, the paths, modifued by a commit are shown. Defaults to false
</span><span class="line">format
</span><span class="line">    For each commit listed, a string containing %X, where %x is one of:
</span><span class="line">
</span><span class="line">    %a
</span><span class="line">        author
</span><span class="line">    %d
</span><span class="line">        date
</span><span class="line">    %m
</span><span class="line">        message
</span><span class="line">    %p
</span><span class="line">        path
</span><span class="line">    %r
</span><span class="line">        revision
</span><span class="line">
</span><span class="line">    Not all revision systems support %d and %r. If specified showPaths argument is ignored. Defaults to "[%a] %m\\n"
</span><span class="line">pathFormat
</span><span class="line">    A string containing %p to indicate how to print paths. Defaults to "\\t%p\\n"</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="to-be-continue">TO BE CONTINUE</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Ssh Key Add in Difference Github Account]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/29/multiple-ssh-key-add-in-difference-github-account/"/>
    <updated>2015-10-29T12:59:20+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/29/multiple-ssh-key-add-in-difference-github-account</id>
    <content type="html"><![CDATA[<h2 id="question">Question</h2>

<p>First computer: I have added <code>id_ras.pub</code> to <code>CBluowei</code> account.</p>

<p>Seconed computer: I have added another <code>id_ras.pub</code> to <code>luoguanzhong</code> account.</p>

<p>I want push <code>luoguanzhong</code>’s project on first computer.</p>

<h2 id="resolve">Resolve</h2>

<ul>
  <li>config the <code>~/.ssh/config</code>.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">Host lgz.github.com
</span><span class="line">  HostName github.com
</span><span class="line">  User git
</span><span class="line">  IdentityFile ~/.ssh/id_rsa_office
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>replace git remote origin from <code>git@github.com/luoguanzhong/xxx.git</code> to <code>git@lgz.github.com/luoguanzhong/xxx.git</code></p>
  </li>
  <li>
    <p>then I can push <code>xxx</code> project on First computer.</p>
  </li>
  <li>
    <p>use <code>ssh -T git@lgz.github.com</code> to verify.</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ES6 Introduction]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/19/es6introduction/"/>
    <updated>2015-10-19T23:12:47+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/19/es6introduction</id>
    <content type="html"><![CDATA[<h2 id="what-is-es6">What is ES6?</h2>

<p>It’s <code>ECMAScript 6</code>, the standard of the next generation of javascript. Now <code>ECMAScript 6</code> is renamed to ECMAScript 2015, that mean it was released in 2015.</p>

<p><code>ECMAScript</code> is a specification, <code>Javascript</code> is an implementation.</p>

<p><a href="http://www.ecma-international.org/">ECMA</a> is an international, they standardize the scripting language.</p>

<p>There are <a href="https://en.wikipedia.org/wiki/ECMAScript#Versions">released versions</a> of <code>ECMAScript</code>.</p>

<p>Other little languages compile into javascript, such as <a href="http://coffeescript.org/">CoffeeScript</a>, <a href="http://www.typescriptlang.org/">TypeScript</a>.</p>

<h2 id="new-features">New features</h2>

<ul>
  <li>Constants</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>const PI = <span class="float">3.14</span>
<span class="line-numbers">2</span>PI &gt; <span class="float">3.0</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">//  only in ES5 through the help of object properties</span>
</span><span class="line"><span class="c1">//  and only in global context and not in a block scope</span>
</span><span class="line"><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">global</span> <span class="o">===</span> <span class="s2">&quot;object&quot;</span> <span class="o">?</span> <span class="nx">global</span> <span class="o">:</span> <span class="nb">window</span><span class="p">,</span> <span class="s2">&quot;PI&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">value</span><span class="o">:</span>        <span class="mf">3.141593</span><span class="p">,</span>
</span><span class="line">    <span class="nx">enumerable</span><span class="o">:</span>   <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nx">writable</span><span class="o">:</span>     <span class="kc">false</span><span class="p">,</span>
</span><span class="line">    <span class="nx">configurable</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="p">})</span>
</span><span class="line"><span class="nx">PI</span> <span class="o">&gt;</span> <span class="mf">3.0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Arrow Functions</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span>odds  = evens.map(v =&gt; v + <span class="integer">1</span>)
<span class="line-numbers">2</span>pairs = evens.map(v =&gt; ({ <span class="key">even</span>: v, <span class="key">odd</span>: v + <span class="integer">1</span> }))
<span class="line-numbers">3</span>nums  = evens.map((v, i) =&gt; v + i)
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">odds</span>  <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">v</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="p">});</span>
</span><span class="line"><span class="nx">pairs</span> <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">{</span> <span class="nx">even</span><span class="o">:</span> <span class="nx">v</span><span class="p">,</span> <span class="nx">odd</span><span class="o">:</span> <span class="nx">v</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">};</span> <span class="p">});</span>
</span><span class="line"><span class="nx">nums</span>  <span class="o">=</span> <span class="nx">evens</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">v</span> <span class="o">+</span> <span class="nx">i</span><span class="p">;</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Default Parameter Values</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers">1</span><span class="keyword">function</span> <span class="function">f</span> (x, y = <span class="integer">7</span>, z = <span class="integer">42</span>) {
<span class="line-numbers">2</span>    <span class="keyword">return</span> x + y + z
<span class="line-numbers">3</span>}
<span class="line-numbers">4</span>f(<span class="integer">1</span>) === <span class="integer">50</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">function</span> <span class="nx">f</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">z</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">y</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">)</span>
</span><span class="line">        <span class="nx">y</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">z</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">)</span>
</span><span class="line">        <span class="nx">z</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span> <span class="o">+</span> <span class="nx">z</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">f</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">===</span> <span class="mi">50</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Enhanced Object Properties</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="comment">// Property Shorthand</span>
<span class="line-numbers"> 2</span>obj = { x, y }
<span class="line-numbers"> 3</span>
<span class="line-numbers"> 4</span><span class="comment">// Computed Property Names</span>
<span class="line-numbers"> 5</span>obj = {
<span class="line-numbers"> 6</span>    <span class="key">foo</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">bar</span><span class="delimiter">&quot;</span></span>,
<span class="line-numbers"> 7</span>    [ <span class="string"><span class="delimiter">&quot;</span><span class="content">prop_</span><span class="delimiter">&quot;</span></span> + foo() ]: <span class="integer">42</span>
<span class="line-numbers"> 8</span>}
<span class="line-numbers"> 9</span>
<span class="line-numbers"><strong>10</strong></span><span class="comment">// Method Properties</span>
<span class="line-numbers">11</span>obj = {
<span class="line-numbers">12</span>    foo (a, b) {
<span class="line-numbers">13</span>        <span class="error">…</span>
<span class="line-numbers">14</span>    },
<span class="line-numbers">15</span>    bar (x, y) {
<span class="line-numbers">16</span>        <span class="error">…</span>
<span class="line-numbers">17</span>    },
<span class="line-numbers">18</span>    *quux (x, y) {
<span class="line-numbers">19</span>        <span class="error">…</span>
<span class="line-numbers"><strong>20</strong></span>    }
<span class="line-numbers">21</span>}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// Property Shorthand</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">x</span><span class="o">:</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span> <span class="nx">y</span> <span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Computed Property Names</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">foo</span><span class="o">:</span> <span class="s2">&quot;bar&quot;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">obj</span><span class="p">[</span> <span class="s2">&quot;prop_&quot;</span> <span class="o">+</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">]</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Method Properties</span>
</span><span class="line"><span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">foo</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="err">…</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="nx">bar</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="err">…</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="c1">//  quux: no equivalent in ES5</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Modules</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="comment">//  lib/math.js</span>
<span class="line-numbers"> 2</span><span class="reserved">export</span> <span class="keyword">function</span> <span class="function">sum</span> (x, y) { <span class="keyword">return</span> x + y }
<span class="line-numbers"> 3</span><span class="reserved">export</span> <span class="keyword">var</span> pi = <span class="float">3.141593</span>
<span class="line-numbers"> 4</span>
<span class="line-numbers"> 5</span><span class="comment">//  someApp.js</span>
<span class="line-numbers"> 6</span><span class="reserved">import</span> * as math from <span class="string"><span class="delimiter">&quot;</span><span class="content">lib/math</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 7</span>console.log(<span class="string"><span class="delimiter">&quot;</span><span class="content">2π = </span><span class="delimiter">&quot;</span></span> + math.sum(math.pi, math.pi))
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span><span class="comment">//  otherApp.js</span>
<span class="line-numbers"><strong>10</strong></span><span class="reserved">import</span> { sum, pi } from <span class="string"><span class="delimiter">&quot;</span><span class="content">lib/math</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers">11</span>console.log(<span class="string"><span class="delimiter">&quot;</span><span class="content">2π = </span><span class="delimiter">&quot;</span></span> + sum(pi, pi))
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">//  lib/math.js</span>
</span><span class="line"><span class="nx">LibMath</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class="line"><span class="nx">LibMath</span><span class="p">.</span><span class="nx">sum</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span> <span class="p">};</span>
</span><span class="line"><span class="nx">LibMath</span><span class="p">.</span><span class="nx">pi</span> <span class="o">=</span> <span class="mf">3.141593</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">//  someApp.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">math</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">;</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;2π = &quot;</span> <span class="o">+</span> <span class="nx">math</span><span class="p">.</span><span class="nx">sum</span><span class="p">(</span><span class="nx">math</span><span class="p">.</span><span class="nx">pi</span><span class="p">,</span> <span class="nx">math</span><span class="p">.</span><span class="nx">pi</span><span class="p">));</span>
</span><span class="line">
</span><span class="line"><span class="c1">//  otherApp.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">.</span><span class="nx">sum</span><span class="p">,</span> <span class="nx">pi</span> <span class="o">=</span> <span class="nx">LibMath</span><span class="p">.</span><span class="nx">pi</span><span class="p">;</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;2π = &quot;</span> <span class="o">+</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">pi</span><span class="p">,</span> <span class="nx">pi</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Classes</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="reserved">class</span> Shape {
<span class="line-numbers"> 2</span>    constructor (id, x, y) {
<span class="line-numbers"> 3</span>        <span class="local-variable">this</span>.id = id
<span class="line-numbers"> 4</span>        <span class="local-variable">this</span>.move(x, y)
<span class="line-numbers"> 5</span>    }
<span class="line-numbers"> 6</span>    move (x, y) {
<span class="line-numbers"> 7</span>        <span class="local-variable">this</span>.x = x
<span class="line-numbers"> 8</span>        <span class="local-variable">this</span>.y = y
<span class="line-numbers"> 9</span>    }
<span class="line-numbers"><strong>10</strong></span>}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ECMAScript 5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">Shape</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">id</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">move</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">);</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="nx">Shape</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">move</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Generator Functions</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">function</span>* idMaker(){
<span class="line-numbers"> 2</span>  <span class="keyword">var</span> index = <span class="integer">0</span>;
<span class="line-numbers"> 3</span>  <span class="keyword">while</span>(index &lt; <span class="integer">3</span>)
<span class="line-numbers"> 4</span>    yield index++;
<span class="line-numbers"> 5</span>}
<span class="line-numbers"> 6</span>
<span class="line-numbers"> 7</span><span class="keyword">var</span> gen = idMaker();
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span>console.log(gen.next().value); <span class="comment">// 0</span>
<span class="line-numbers"><strong>10</strong></span>console.log(gen.next().value); <span class="comment">// 1</span>
<span class="line-numbers">11</span>console.log(gen.next().value); <span class="comment">// 2</span>
<span class="line-numbers">12</span>console.log(gen.next().value); <span class="comment">// undefined</span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Spread operator</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span><span class="keyword">function</span> <span class="function">add</span>(a, b) {
<span class="line-numbers"> 2</span>  <span class="keyword">return</span> a + b;
<span class="line-numbers"> 3</span>}
<span class="line-numbers"> 4</span>
<span class="line-numbers"> 5</span>let nums = [<span class="integer">5</span>, <span class="integer">4</span>];
<span class="line-numbers"> 6</span>
<span class="line-numbers"> 7</span>console.log(add(...nums));
<span class="line-numbers"> 8</span>
<span class="line-numbers"> 9</span>let foo = <span class="string"><span class="delimiter">&quot;</span><span class="content">foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"><strong>10</strong></span>let chars = [ ...str ] <span class="comment">// [ &quot;f&quot;, &quot;o&quot;, &quot;o&quot; ]</span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Proxying</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>ECMAScript 6 </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> 1</span>let target = {
<span class="line-numbers"> 2</span>    <span class="key">foo</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Welcome, foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"> 3</span>}
<span class="line-numbers"> 4</span>let proxy = <span class="keyword">new</span> Proxy(target, {
<span class="line-numbers"> 5</span>    get (receiver, name) {
<span class="line-numbers"> 6</span>        <span class="keyword">return</span> name <span class="keyword">in</span> receiver ? receiver[name] : <span class="error">`</span>Hello, <span class="predefined">$</span>{name}<span class="error">`</span>
<span class="line-numbers"> 7</span>    }
<span class="line-numbers"> 8</span>})
<span class="line-numbers"> 9</span>proxy.foo   === <span class="string"><span class="delimiter">&quot;</span><span class="content">Welcome, foo</span><span class="delimiter">&quot;</span></span>
<span class="line-numbers"><strong>10</strong></span>proxy.world === <span class="string"><span class="delimiter">&quot;</span><span class="content">Hello, world</span><span class="delimiter">&quot;</span></span>
</pre></div>
</div>
 </figure></notextile></div>

<ul>
  <li>Map and Set Data-Structure</li>
</ul>

<p>To see more, we could visit, <a href="http://es6-features.org/#Constants">ECMAScript 6 — New Features: Overview &amp; Comparison</a></p>

<h2 id="compile">Compile</h2>

<p>Compile ES6 to ES5.</p>

<p>Why need <code>compile</code>? because the <a href="http://kangax.github.io/compat-table/es6/">browser support of ES6</a> isn’t enough.</p>

<ul>
  <li><a href="https://babeljs.io/">Babel</a></li>
</ul>

<p><code>Babel</code> is a new name of <code>ES6to5</code>. It can integrate with many js / node frameworks.</p>

<h2 id="conclusion">Conclusion</h2>

<p>OK, let’s start ES6 now!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DISQUS Example]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/14/disqus-example/"/>
    <updated>2015-10-14T18:05:18+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/14/disqus-example</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE HTML&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">  <span class="nt">&lt;title&gt;</span>Disqus AJAX Test Site<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line"><span class="nt">&lt;div&gt;</span>
</span><span class="line">    <span class="nt">&lt;pre&gt;</span>
</span><span class="line">        cklasnclkasnclanclasnclkasnclascasc
</span><span class="line">        ascnknascklnaskcnaskc
</span><span class="line">        nalcknlakscnlask
</span><span class="line">    <span class="nt">&lt;/pre&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;disqus_thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid1&#39;, &#39;http://example.com/unique-path-to-article1/&#39;, &#39;Article Title 2&#39;, &#39;en&#39;);&quot;</span><span class="nt">&gt;</span>Load article 1 (English)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid2&#39;, &#39;http://example.com/unique-path-to-article2/&#39;, &#39;Article Title 2&#39;, &#39;fr&#39;);&quot;</span><span class="nt">&gt;</span>Load article 2 (Franch)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid3&#39;, &#39;http://example.com/unique-path-to-article3/&#39;, &#39;Article Title 3&#39;, &#39;zh&#39;);&quot;</span><span class="nt">&gt;</span>Load article 3 (Chinese)<span class="nt">&lt;/button&gt;</span>
</span><span class="line"><span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;reset(&#39;newid4&#39;, &#39;http://example.com/unique-path-to-article4/&#39;, &#39;Article Title 4&#39;, &#39;ru&#39;);&quot;</span><span class="nt">&gt;</span>Load article 4 (Russian)<span class="nt">&lt;/button&gt;</span>
</span><span class="line">
</span><span class="line"><span class="c">&lt;!-- &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt; --&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="cm">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_shortname</span> <span class="o">=</span> <span class="s1">&#39;example&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_identifier</span> <span class="o">=</span> <span class="s1">&#39;newid1&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">disqus_url</span> <span class="o">=</span> <span class="s1">&#39;http://example.com/unique-path-to-article-1/&#39;</span><span class="p">;</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">disqus_config</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">language</span> <span class="o">=</span> <span class="s2">&quot;en&quot;</span><span class="p">;</span>
</span><span class="line">  <span class="p">};</span>
</span><span class="line">    <span class="cm">/* * * DON&#39;T EDIT BELOW THIS LINE * * */</span>
</span><span class="line">    <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">dsq</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span> <span class="nx">dsq</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span> <span class="nx">dsq</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class="line">        <span class="nx">dsq</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://&#39;</span> <span class="o">+</span> <span class="nx">disqus_shortname</span> <span class="o">+</span> <span class="s1">&#39;.disqus.com/embed.js&#39;</span><span class="p">;</span>
</span><span class="line">        <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">dsq</span><span class="p">);</span>
</span><span class="line">    <span class="p">})();</span>
</span><span class="line">    <span class="cm">/* * * Disqus Reset Function * * */</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">reset</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">newIdentifier</span><span class="p">,</span> <span class="nx">newUrl</span><span class="p">,</span> <span class="nx">newTitle</span><span class="p">,</span> <span class="nx">newLanguage</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">DISQUS</span><span class="p">.</span><span class="nx">reset</span><span class="p">({</span>
</span><span class="line">            <span class="nx">reload</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">            <span class="nx">config</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">identifier</span> <span class="o">=</span> <span class="nx">newIdentifier</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="nx">newUrl</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">newTitle</span><span class="p">;</span>
</span><span class="line">                <span class="k">this</span><span class="p">.</span><span class="nx">language</span> <span class="o">=</span> <span class="nx">newLanguage</span><span class="p">;</span>
</span><span class="line">            <span class="p">}</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;noscript&gt;</span>Please enable JavaScript to view the <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com/?ref_noscript&quot;</span><span class="nt">&gt;</span>comments powered by Disqus.<span class="nt">&lt;/a&gt;&lt;/noscript&gt;</span>
</span><span class="line"><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://disqus.com&quot;</span> <span class="na">class=</span><span class="s">&quot;dsq-brlink&quot;</span><span class="nt">&gt;</span>blog comments powered by <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;logo-disqus&quot;</span><span class="nt">&gt;</span>Disqus<span class="nt">&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveRecord, Class_attribute]]></title>
    <link href="http://weilluo.github.io/blog/2015/10/14/activerecord-class_attribute/"/>
    <updated>2015-10-14T11:51:44+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/10/14/activerecord-class_attribute</id>
    <content type="html"><![CDATA[<p>how to use class_attribuet:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Base</span>
</span><span class="line">  <span class="n">class_attribute</span> <span class="ss">:setting</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Subclass</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Subclass</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="n">base</span> <span class="o">=</span> <span class="no">Base</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="nb">puts</span> <span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class="line"><span class="nb">puts</span> <span class="no">Base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; true</span>
</span><span class="line"><span class="nb">puts</span> <span class="n">base</span><span class="o">.</span><span class="n">setting</span> <span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS Beanstalk Ruby Passenger, Solutions of Rjb Installing and 504 Gateway-Timeout]]></title>
    <link href="http://weilluo.github.io/blog/2015/07/22/aws-beanstalk-ruby-passenger/"/>
    <updated>2015-07-22T19:03:56+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/07/22/aws-beanstalk-ruby-passenger</id>
    <content type="html"><![CDATA[<p>Environment: AWS Beanstalk, 64bit Amazon Linux 2015.03 v1.4.1 running Ruby 2.1 (Passenger Standalone)</p>

<p>Project: Rails</p>

<p>The server had installed <code>java-1.7.0-openjdk</code>, and <code>JAVA_HOME = /usr/lib/jvm/jre</code></p>

<p>There are to issuses:</p>

<ul>
  <li>gem install rjb, can’t find the floder /usr/lib/jvm/jre/include</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># we should install java-1.7.0-openjdk-devel
</span><span class="line">packages:
</span><span class="line">  yum:
</span><span class="line">      git: []
</span><span class="line">        java-1.7.0-openjdk-devel: []
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>504 Gateway-Timeout, when the request invoke some method depend <code>RJB</code></li>
</ul>

<p>I had found a paragraph: <a href="http://xsen.iteye.com/blog/440675">http://xsen.iteye.com/blog/440675</a></p>

<p>The <code>Reason</code> is <code>rjb</code>, he said, and the solution is, in，passenger_ruby配置项下添加一行设置:</p>

<ul>
  <li>if using nginx, add this code in passenger_ruby config, <code>rails_spawn_method conservative;</code></li>
  <li>if using apache, add this code in PassengerRuby config, <code>RailsSpawnMethod conservative</code></li>
</ul>

<p>and I found s syntax code used for AWS Beanstalk, that is <a href="https://gist.github.com/luoguanzhong/bb684c59dfbe9ae02022">https://gist.github.com/luoguanzhong/bb684c59dfbe9ae02022</a>.</p>

<p><strong>Summary</strong>：You should login the server and see where the package install, and which it install. This could be help you quickly find the right solution.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delete Commits From a Branch in Git]]></title>
    <link href="http://weilluo.github.io/blog/2015/06/30/delete-commits-from-a-branch-in-git/"/>
    <updated>2015-06-30T17:34:07+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/06/30/delete-commits-from-a-branch-in-git</id>
    <content type="html"><![CDATA[<p>Reference: <a href="http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git">http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git</a></p>

<p><strong>Careful</strong>: <code>git reset --hard</code> WILL DELETE YOUR WORKING DIRECTORY CHANGES. Be sure to <strong>stash any local changes you want to keep</strong> before running this command.</p>

<p>Assuming you are sitting on that commit, then this command will wack it…</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git reset --hard HEAD~1</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>The <code>HEAD~1</code> means the commit before head.</p>

<p>Or, you could look at the output of <code>git log</code>, find the commit id of the commit you want to back up to, and then do this:</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git reset --hard &lt;sha1-commit-id&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>
<hr />
<p>If you already pushed it, you will need to do a force push to get rid of it…</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git push origin HEAD --force</span></code></pre></td></tr></table></div></figure></notextile></div>
<p><strong>However</strong>, if others may have pulled it, then you would be better off starting a new branch. Because when they pull, it will just merge it into their work, and you will get it pushed back up again.</p>

<p>If you already pushed, it may be better to use <code>git revert</code>, to create a “mirror image” commit that will undo the changes. However, both commits will both be in the log.</p>

<hr />

<p>FYI – <code>git reset --hard HEAD</code> is great if you want to get rid of WORK IN PROGRESS. It will reset you back to the most recent commit, and erase all the changes in your working tree and index.</p>

<hr />

<p>Lastly, if you need to find a commit that you “deleted”, it is typically present in <code>git reflog</code> unless you have garbage collected your repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Sublime Custom Config]]></title>
    <link href="http://weilluo.github.io/blog/2015/06/29/my-sublime-custom-config/"/>
    <updated>2015-06-29T21:13:46+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/06/29/my-sublime-custom-config</id>
    <content type="html"><![CDATA[<ul>
  <li>User Preference:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">{
</span><span class="line">  "color_scheme": "Packages/Theme - Cobalt2/cobalt2.tmTheme",
</span><span class="line">  "font_face": "Yahei Consolas Hybrid",
</span><span class="line">  "font_size": 12,
</span><span class="line">  "save_on_focus_lost": true,
</span><span class="line">  "tab_size": 2,
</span><span class="line">  "theme": "Cobalt2.sublime-theme",
</span><span class="line">  "translate_tabs_to_spaces": true,
</span><span class="line">  "trim_trailing_white_space_on_save": true,
</span><span class="line">  // "tmp/*.tmp" is for ember-cli project
</span><span class="line">  "folder_exclude_patterns": [".svn", ".git", ".hg", "CVS", "tmp/*.tmp"]
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>User Key Bindings</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[
</span><span class="line">  { "keys": ["command+shift+f"], "command": "reindent"}
</span><span class="line">]</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clear Watchman Watch-list]]></title>
    <link href="http://weilluo.github.io/blog/2015/05/18/clear-watchman-watch-list/"/>
    <updated>2015-05-18T18:22:09+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/05/18/clear-watchman-watch-list</id>
    <content type="html"><![CDATA[<p>Watchman: <a href="https://github.com/facebook/watchman">https://github.com/facebook/watchman</a></p>

<ul>
  <li>create file <code>clear_watchman_list.rb</code> in <code>HOME</code> folder.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">result</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span> <span class="sx">%x{watchman watch-list}</span>
</span><span class="line"><span class="n">result</span><span class="o">[</span><span class="s2">&quot;roots&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">dir</span><span class="o">|</span>
</span><span class="line">  <span class="nb">system</span> <span class="s2">&quot;watchman watch-del </span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>define <code>cwl</code> command in <code>.profile</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># clear watchman list</span>
</span><span class="line"><span class="nb">alias </span><span class="nv">cwl</span><span class="o">=</span><span class="s2">&quot;ruby $HOME/clear_watchman_list.rb&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>use <code>cwl</code> if we want to empty the watchman list.</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swap Space for Aws Ubuntu Server]]></title>
    <link href="http://weilluo.github.io/blog/2015/05/07/swap-space-for-aws-ubuntu-server/"/>
    <updated>2015-05-07T13:20:52+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/05/07/swap-space-for-aws-ubuntu-server</id>
    <content type="html"><![CDATA[<p>It’s very <code>important</code>!!!</p>

<p>Swap will auto release (or free) the unused memory.</p>

<p>We setup an <code>jenkins</code> ci server, run functional test on firefox use xvfb. After some hours, the memory is almost full.</p>

<p>So we add swap to our ci server.</p>

<p>Example: <a href="https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04">https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04</a></p>

<p>Reference:</p>

<p><a href="http://stackoverflow.com/questions/29764181/jenkins-email-ext-plugin-pre-send-scripts">http://stackoverflow.com/questions/29764181/jenkins-email-ext-plugin-pre-send-scripts</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup JDK Environment]]></title>
    <link href="http://weilluo.github.io/blog/2015/05/06/setup-jdk-environment/"/>
    <updated>2015-05-06T10:13:40+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/05/06/setup-jdk-environment</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># set jdk environment</span>
</span><span class="line"><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;/home/jenkins/Development/jdk1.8.0_40&quot;</span>
</span><span class="line"><span class="nb">export </span><span class="nv">CLASSPATH</span><span class="o">=</span><span class="s2">&quot;.:$JAVA_HOME/lib/:$JAVA_HOME/jre/lib:$CLASSPATH&quot;</span>
</span><span class="line"><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Can Cause a Cookie Not to Be Set on the Client?]]></title>
    <link href="http://weilluo.github.io/blog/2015/04/17/what-can-cause-a-cookie-not-to-be-set-on-the-client/"/>
    <updated>2015-04-17T10:11:06+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/04/17/what-can-cause-a-cookie-not-to-be-set-on-the-client</id>
    <content type="html"><![CDATA[<h2 id="issues">Issues</h2>

<p>I use ember at cliend, and start on localhost:4200; sinatra at server, start on localhost:9292.</p>

<p>Then I use <code>response.set_cookie()</code> to store user info, but I cannot see cookie setted just now on <code>chrome console -&gt; resource -&gt; cookies -&gt; localhost</code>.</p>

<p>cliend code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="line">  <span class="nx">url</span><span class="o">:</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//localhost:9292/user</span>
</span><span class="line"><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>cliend code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">response</span><span class="o">.</span><span class="n">set_cookie</span><span class="p">(</span><span class="s1">&#39;Cookie-Name&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:value</span> <span class="o">=&gt;</span> <span class="n">value</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:expires</span> <span class="o">=&gt;</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="o">+</span> <span class="mi">3600</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">14</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:domain</span> <span class="o">=&gt;</span> <span class="vi">@domain</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="ss">:httponly</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="solution">Solution</h2>

<p>Option in ajax:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">xhrFields</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">withCredentials</span><span class="o">:</span> <span class="kc">true</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Response header in sinatra, <code>Access-Control-Allow-Credentials: true</code>, <code>Access-Control-Allow-Origin: http://localhost:4200</code></p>

<h2 id="important">Important</h2>

<p>Don’t set localhost as a domain for your cookies because you need to set it to “” or FALSE</p>

<h2 id="reference">Reference</h2>

<p><a href="http://stackoverflow.com/questions/14801021/what-can-cause-a-cookie-not-to-be-set-on-the-client">http://stackoverflow.com/questions/14801021/what-can-cause-a-cookie-not-to-be-set-on-the-client</a>
<a href="http://stackoverflow.com/questions/5078091/sinatra-response-set-cookie-doesnt-work">http://stackoverflow.com/questions/5078091/sinatra-response-set-cookie-doesnt-work</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Space on Mac.]]></title>
    <link href="http://weilluo.github.io/blog/2015/04/10/free-space-on-mac/"/>
    <updated>2015-04-10T13:19:53+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/04/10/free-space-on-mac</id>
    <content type="html"><![CDATA[<ul>
  <li>
    <p>Use <code>sudo du -sh *</code> command to see the folder size in current folder.</p>
  </li>
  <li>
    <p>I found <code>/Library/Application\ Support/Symantec/AntiVirus/</code> folder is very big, almost <code>51GB</code>, and the files in this folder are the backup about kind of daily job. Each of them is greater than <code>200M</code>.</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># file list</span>
</span><span class="line">...
</span><span class="line">20150401.018   20150405.021   20150407.001   20150408.004   20150409.001   engine.mfst
</span><span class="line">20150401.032   20150406.009   20150407.017   20150408.018   Signed
</span><span class="line">20150402.001   20150406.032   20150407.057   20150408.035   SymAPComm.kext
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>I use <code>sudo rm -rf ...</code> command to delete the old backup.</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Whenever Gem]]></title>
    <link href="http://weilluo.github.io/blog/2015/04/07/use-whenever-gem/"/>
    <updated>2015-04-07T10:31:35+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/04/07/use-whenever-gem</id>
    <content type="html"><![CDATA[<p>Whenever gem hosthome <a href="https://github.com/javan/whenever">https://github.com/javan/whenever</a></p>

<ul>
  <li>After installing whenever, use these command to initialize:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">wheneverize</span> <span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>update your scheduler:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">whenever</span> <span class="o">--</span><span class="n">update</span><span class="o">-</span><span class="n">crontab</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code>crontab</code> usage:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">crontab -l <span class="c"># view the schedulers.</span>
</span><span class="line">crontab -r <span class="c"># remove all schedulers.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone4 无 SHSH 从 iOS7.1.2 降级到 iOS6.1.3]]></title>
    <link href="http://weilluo.github.io/blog/2015/02/09/iphone4-wu-shsh-cong-ios7-dot-1-2-jiang-ji-dao-ios6-dot-1-3/"/>
    <updated>2015-02-09T12:37:50+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/02/09/iphone4-wu-shsh-cong-ios7-dot-1-2-jiang-ji-dao-ios6-dot-1-3</id>
    <content type="html"><![CDATA[<h2 id="iphone4gsm-">经过艰辛的历程，终于将 iPhone4(GSM版) 成功降级；</h2>

<ul>
  <li>使用工具</li>
</ul>

<p>爱思，红雪，平台windows7</p>

<ul>
  <li>悲剧的报错</li>
</ul>

<p>之前使用的是xp系统，结果出现写入 AppleLogo 失败，set Picture 0 failure…的报错，一直以为是手机硬件问题，纠结了半个多月。之后自己的 win7 电脑修好后，重新试了一下，竟然成功了。</p>

<ul>
  <li>
    <p>刷机过程 <a href="http://bbs.i4.cn/thread-18856-1-1.html">http://bbs.i4.cn/thread-18856-1-1.html</a></p>

    <ul>
      <li>
        <p>使用红雪或爱思助手等工具查看手机的ECID</p>
      </li>
      <li>
        <p>找到对应 iOS 版本的 shsh 文件，打开文件，将 ECID 的改为自己手机的</p>
      </li>
      <li>
        <p>将修改后的 shsh 文件上传到爱思服务器</p>
      </li>
      <li>
        <p>使用爱思助手刷机，刷机前选中保持基带不升级</p>
      </li>
      <li>
        <p>使用红雪进行越狱，越狱时一定选择 Deactive 选项，否则开机后手机无服务</p>
      </li>
      <li>
        <p>每次关机后都必须使用红雪进行引导开机</p>
      </li>
      <li>
        <p>如果手机锁屏后睡死，请在 Cydia 中添加威锋源(apt.weiphone.com)，再下载 insomnia pro 插件，保证锁屏系统不真正睡眠，但这样非常耗电。喜欢 iOS6 style 的朋友可以使用第二篇文章中的6.2.1的固件刷机，成功后不会出现睡死状况。</p>
      </li>
    </ul>
  </li>
  <li>
    <p>PS</p>
  </li>
</ul>

<p>这篇博客讲了直接使用无睡死的固件来刷机，<a href="http://bbs.app111.com/thread-640908-1-1.html">http://bbs.app111.com/thread-640908-1-1.html</a> ，下载好文章中给出的固件后，还是按照以上 <code>3.4</code> - <code>3.6</code> 的步骤来操作。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functional Test in Ubuntu Server Use Rails]]></title>
    <link href="http://weilluo.github.io/blog/2015/02/03/functional-test-in-ubuntu-server-use-rails/"/>
    <updated>2015-02-03T09:34:44+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/02/03/functional-test-in-ubuntu-server-use-rails</id>
    <content type="html"><![CDATA[<ul>
  <li>install xfvb in ubuntu server</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get install xvfb
</span><span class="line">sudo apt-get install xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>run rspec</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">xvfb-run -a -n <span class="m">99</span> bundle <span class="nb">exec </span>rspec spec
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capybara::ElementNotFound: Unable to Find File Field “file”]]></title>
    <link href="http://weilluo.github.io/blog/2015/01/19/capybara-elementnotfound-unable-to-find-file-field-file/"/>
    <updated>2015-01-19T17:21:44+08:00</updated>
    <id>http://weilluo.github.io/blog/2015/01/19/capybara-elementnotfound-unable-to-find-file-field-file</id>
    <content type="html"><![CDATA[<p>Html code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;tpBtn&quot;</span><span class="nt">&gt;</span>Upload File<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="na">name=</span><span class="s">&quot;file&quot;</span> <span class="na">id=</span><span class="s">&quot;resumefile&quot;</span> <span class="na">class=</span><span class="s">&quot;upload&quot;</span><span class="nt">/&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Rspec code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">attach_file</span><span class="p">(</span><span class="s1">&#39;resumefile&#39;</span><span class="p">,</span> <span class="n">file_path</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>And when we exec the spec, there will be an error, ‘Capybara::ElementNotFound: Unable to find file field “file”’, so we should do this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Capybara</span><span class="o">.</span><span class="n">ignore_hidden_elements</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add above code into spec_helper.rb file.</p>
]]></content>
  </entry>
  
</feed>
